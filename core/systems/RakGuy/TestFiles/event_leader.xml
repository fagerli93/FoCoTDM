<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/RakGuy/Desktop/SAMP_Server/pawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Users\RakGuy\Desktop\FocoTDM\ftdmMain\ftdmDevs\Developer\RakGuy\TestFiles\event_leader.pwn">
	<assembly>
		<name>event_leader.pwn</name>
	</assembly>
	<members>

		<!-- enumerations -->
		<member name="T:ALS" value="72">
			<tagname value="ALS"/>
			<member name="C:ALS_OnScriptInit" value="0">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnScriptExit" value="1">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeInit" value="2">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeExit" value="3">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptInit" value="4">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptExit" value="5">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerConnect" value="6">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDisconnect" value="7">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSpawn" value="8">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDeath" value="9">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleSpawn" value="10">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDeath" value="11">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerText" value="12">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandText" value="13">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestClass" value="14">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterVehicle" value="15">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitVehicle" value="16">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStateChange" value="17">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterCheckpoint" value="18">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveCheckpoint" value="19">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterRaceCheckpoint" value="20">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveRaceCheckpoint" value="21">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconCommand" value="22">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestSpawn" value="23">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnObjectMoved" value="24">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerObjectMoved" value="25">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerPickUpPickup" value="26">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleMod" value="27">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnEnterExitModShop" value="28">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehiclePaintjob" value="29">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleRespray" value="30">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDamageStatusUpdate" value="31">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectedMenuRow" value="32">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitedMenu" value="33">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerInteriorChange" value="34">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerKeyStateChange" value="35">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconLoginAttempt" value="36">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerUpdate" value="37">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamIn" value="38">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamOut" value="39">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamIn" value="40">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamOut" value="41">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnDialogResponse" value="42">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayer" value="43">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogin" value="44">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogout" value="45">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerTakeDamage" value="46">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerGiveDamage" value="47">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickMap" value="48">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandReceived" value="49">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandPerformed" value="50">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnUnoccupiedVehicleUpdate" value="51">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickTextDraw" value="52">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayerTextDraw" value="53">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditObject" value="54">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditAttachedObject" value="55">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterArea" value="56">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveArea" value="57">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerFinishRace" value="58">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitRace" value="59">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRaceEnd" value="60">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnDynamicObjectMoved" value="61">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditDynamicObject" value="62">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectDynamicObject" value="63">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerPickUpDynamicPickup" value="64">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterDynamicCP" value="65">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveDynamicCP" value="66">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterDynamicRaceCP" value="67">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveDynamicRaceCP" value="68">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterDynamicArea" value="69">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveDynamicArea" value="70">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectObject" value="71">
				<tagname value="Bit"/>
			</member>
		</member>
		<member name="T:E_TD_DATA" value="22">
			<tagname value="E_TD_DATA"/>
			<member name="C:E_TD_DATA_NAME" value="0">
				<size value="8"/>
			</member>
			<member name="C:E_TD_DATA_HASH" value="8">
			</member>
			<member name="C:E_TD_DATA_X" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_Y" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_LX" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_LY" value="12">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_TX" value="13">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_TY" value="14">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DATA_COLOUR" value="15">
			</member>
			<member name="C:E_TD_DATA_BITS" value="16">
				<tagname value="e_TD_BITS"/>
			</member>
			<member name="C:E_TD_DATA_BOX" value="17">
			</member>
			<member name="C:E_TD_DATA_BG" value="18">
			</member>
			<member name="C:E_TD_DATA_TIME" value="19">
			</member>
			<member name="C:E_TD_DATA_USE" value="20">
				<tagname value="Text"/>
			</member>
			<member name="C:E_TD_DATA_UPDATE" value="21">
			</member>
			<referrer name="TD_MorphTDInternal"/>
		</member>
		<member name="T:E_TD_DISPLAY" value="40">
			<tagname value="E_TD_DISPLAY"/>
			<member name="C:E_TD_DISPLAY_TEXT" value="0">
				<size value="32"/>
			</member>
			<member name="C:E_TD_DISPLAY_X" value="32">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DISPLAY_Y" value="33">
				<tagname value="Float"/>
			</member>
			<member name="C:E_TD_DISPLAY_NEXT" value="34">
				<tagname value="Text"/>
			</member>
			<member name="C:E_TD_DISPLAY_STYLE" value="35">
				<tagname value="Style"/>
			</member>
			<member name="C:E_TD_DISPLAY_LIFE" value="36">
			</member>
			<member name="C:E_TD_DISPLAY_REAL" value="37">
				<tagname value="Text"/>
			</member>
			<member name="C:E_TD_DISPLAY_REVISION" value="38">
			</member>
			<member name="C:E_TD_DISPLAY_LINKED" value="39">
				<tagname value="Text"/>
			</member>
		</member>
		<member name="T:E_XML_HANDLER" value="64">
			<tagname value="E_XML_HANDLER"/>
			<member name="C:E_XML_HANDLER_TRIGGER" value="0">
				<size value="32"/>
			</member>
			<member name="C:E_XML_HANDLER_FUNCTION" value="32">
				<size value="32"/>
			</member>
		</member>
		<member name="T:E_XML_PARA" value="113">
			<tagname value="E_XML_PARA"/>
			<member name="C:E_XML_PARA_NAME" value="0">
				<size value="32"/>
			</member>
			<member name="C:E_XML_PARA_VALUE" value="32">
				<size value="80"/>
			</member>
			<member name="C:E_XML_PARA_LEVEL" value="112">
			</member>
		</member>
		<member name="T:E_XML_WRITE" value="114">
			<tagname value="E_XML_WRITE"/>
			<member name="C:E_XML_WRITE_TAG" value="0">
				<size value="32"/>
			</member>
			<member name="C:E_XML_WRITE_VALUE" value="32">
				<size value="80"/>
			</member>
			<member name="C:E_XML_WRITE_CHILDREN" value="112">
			</member>
			<member name="C:E_XML_WRITE_SIBLINGS" value="113">
			</member>
		</member>
		<member name="T:FoCoD" value="7">
			<tagname value="FoCoD"/>
			<member name="C:onlinetime" value="0">
			</member>
			<member name="C:dev" value="1">
			</member>
			<member name="C:jailed" value="2">
			</member>
			<member name="C:level" value="3">
			</member>
			<member name="C:duels_won" value="4">
			</member>
			<member name="C:duels_lost" value="5">
			</member>
			<member name="C:duels_total" value="6">
			</member>
		</member>
		<member name="T:TeamDet_A" value="26">
			<tagname value="TeamDet_A"/>
			<member name="C:T_Name" value="0">
				<size value="20"/>
			</member>
			<member name="C:T_SkinID" value="20">
			</member>
			<member name="C:team_spawn_x" value="21">
				<tagname value="Float"/>
			</member>
			<member name="C:team_spawn_y" value="22">
				<tagname value="Float"/>
			</member>
			<member name="C:team_spawn_z" value="23">
				<tagname value="Float"/>
			</member>
			<member name="C:T_Color" value="24">
			</member>
			<member name="C:team_type" value="25">
			</member>
		</member>
		<member name="T:event_kdr_det" value="5">
			<tagname value="event_kdr_det"/>
			<member name="C:e_kills" value="0">
			</member>
			<member name="C:e_deaths" value="1">
			</member>
			<member name="C:e_spree" value="2">
			</member>
			<member name="C:e_maxspree" value="3">
			</member>
			<member name="C:e_totspree" value="4">
			</member>
		</member>
		<member name="T:event_leader_det" value="5">
			<tagname value="event_leader_det"/>
			<member name="C:kill_lead" value="0">
			</member>
			<member name="C:death_lead" value="1">
			</member>
			<member name="C:kdr_lead" value="2">
			</member>
			<member name="C:spree_lead" value="3">
			</member>
			<member name="C:totspree_lead" value="4">
			</member>
			<referrer name="DisplayEventLeader"/>
		</member>
		<member name="T:event_topspreedet" value="25">
			<tagname value="event_topspreedet"/>
			<member name="C:p_name" value="0">
				<size value="24"/>
			</member>
			<member name="C:p_spree" value="24">
			</member>
		</member>

		<!-- constants -->
		<member name="C:cellbits" value="32">
			<referrer name="Bit_Set"/>
			<referrer name="Bits@YSII_Ag"/>
			<referrer name="Blanks@YSII_Ag"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_HideForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_HideForAll"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="TD_MorphTDInternal"/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="XML_AddParameter"/>
			<referrer name="XML_AddItem"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="boolstr"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="XML_Parse"/>
			<referrer name="SetColour"/>
			<referrer name="GetColour"/>
			<referrer name="GetColourStream"/>
			<referrer name="TD_LoadColour"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="boolstr"/>
			<referrer name="_Timer_D"/>
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_RemoveHandler"/>
			<referrer name="SetColour"/>
			<referrer name="_SetColourHash"/>
			<referrer name="GetColour"/>
			<referrer name="GetColourStream"/>
			<referrer name="GetColourHash"/>
			<referrer name="Colours_DoHashParse"/>
			<referrer name="TD_LoadColour"/>
			<referrer name="TD_Textdraw"/>
			<referrer name="TD_StylePosition"/>
			<referrer name="TD_StyleXPos"/>
			<referrer name="TD_StyleYPos"/>
		</member>

		<!-- variables -->
		<member name="F:AMX_BASE_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="@yH_ScriptInit1"/>
		</member>
		<member name="F:AMX_HEADER_AMX_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_CIP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_COD">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_TraceCode"/>
		</member>
		<member name="F:AMX_HEADER_DAT">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
		</member>
		<member name="F:AMX_HEADER_DEFSIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FILE_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FLAGS">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_HEA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceMemory"/>
		</member>
		<member name="F:AMX_HEADER_LIBRARIES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_MAGIC">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_NAMETABLE">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_NATIVES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_PUBLICS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="Hooks_AddOne"/>
		</member>
		<member name="F:AMX_HEADER_PUBVARS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_SIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_STP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_TAGS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_REAL_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_REAL_DATA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobalAddress"/>
		</member>
		<member name="F:Aduty">
		</member>
		<member name="F:Bot@YSII_Ag">
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Bot@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="F:Character@YSII_Ag">
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Character@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="F:Event_ID">
		</member>
		<member name="F:Event_InProgress">
		</member>
		<member name="F:Event_KDR">
			<referrer name="AddToEventKills"/>
			<referrer name="ResetEventKills"/>
			<referrer name="DisplayEventLeader"/>
		</member>
		<member name="F:Event_TopSpree">
			<referrer name="AddToEventKills"/>
			<referrer name="ResetEKForEvent"/>
			<referrer name="DisplayEventLeader"/>
		</member>
		<member name="F:FALSE">
			<tagname value="bool"/>
		</member>
		<member name="F:FoCo_Player">
		</member>
		<member name="F:FoCo_Team">
			<referrer name="S@@_OnPlayerRequestClass"/>
		</member>
		<member name="F:FoCo_Teams">
		</member>
		<member name="F:Foco_Event_Died">
		</member>
		<member name="F:I@">
			<referrer name="_Timer_C"/>
			<referrer name="_SetColoursCanHaveSpaces_"/>
			<referrer name="SetColoursCanHaveSpaces"/>
			<referrer name="SetColourHash"/>
			<referrer name="_SetColourHash_"/>
		</member>
		<member name="F:J@">
			<referrer name="_SetColoursCanHaveSpaces_"/>
			<referrer name="SetColoursCanHaveSpaces"/>
			<referrer name="SetColourHash"/>
			<referrer name="_SetColourHash_"/>
		</member>
		<member name="F:NULL">
		</member>
		<member name="F:P_Status">
			<referrer name="GetPlayerStatus"/>
		</member>
		<member name="F:Player@YSII_Ag">
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_HideForAll"/>
			<referrer name="TD_MorphTDInternal"/>
			<referrer name="AdminsOnline"/>
			<referrer name="TAdminsOnline"/>
			<referrer name="ResetEKForEvent"/>
			<referrer name="DisplayEventLeader"/>
		</member>
		<member name="F:Player@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="F:Q@">
			<referrer name="S@"/>
			<referrer name="G@"/>
			<referrer name="F@"/>
		</member>
		<member name="F:SSCANF_gInit">
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_gOPC">
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
		</member>
		<member name="F:SSCANF_gOPDC">
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:TRUE">
			<tagname value="bool"/>
		</member>
		<member name="F:YSI_FILTERSCRIPT">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="YVers_OnScriptInit"/>
		</member>
		<member name="F:YSI_gMallocMemory">
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="calloc"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
			<referrer name="_Timer_F"/>
		</member>
		<member name="F:YSI_g_sCallbackAddresses">
			<referrer name="Hooks_AddOne"/>
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Itter_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="Itter_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="zcmd_OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnDynamicObjectMoved"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="OnPlayerLeaveDynamicCP"/>
			<referrer name="OnPlayerEnterDynamicRaceCP"/>
			<referrer name="OnPlayerLeaveDynamicRaceCP"/>
			<referrer name="OnPlayerEnterDynamicArea"/>
			<referrer name="OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:YSI_g_sCallbackEnd">
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Itter_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="Itter_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="zcmd_OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnDynamicObjectMoved"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="OnPlayerLeaveDynamicCP"/>
			<referrer name="OnPlayerEnterDynamicRaceCP"/>
			<referrer name="OnPlayerLeaveDynamicRaceCP"/>
			<referrer name="OnPlayerEnterDynamicArea"/>
			<referrer name="OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:YSI_g_sCallbackStart">
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Itter_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="Itter_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="zcmd_OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnDynamicObjectMoved"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="OnPlayerLeaveDynamicCP"/>
			<referrer name="OnPlayerEnterDynamicRaceCP"/>
			<referrer name="OnPlayerLeaveDynamicRaceCP"/>
			<referrer name="OnPlayerEnterDynamicArea"/>
			<referrer name="OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:YSI_g_sCheckSpaces">
			<tagname value="bool"/>
			<referrer name="_SetColoursCanHaveSpaces"/>
			<referrer name="SetColour"/>
			<referrer name="GetColour"/>
			<referrer name="GetColourStream"/>
		</member>
		<member name="F:YSI_g_sColours">
			<referrer name="_SetColourHash"/>
			<referrer name="GetColourStream"/>
			<referrer name="GetColourHash"/>
		</member>
		<member name="F:YSI_g_sCurBuffer">
			<referrer name="XML_Destroy"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_Push"/>
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_GetKeyValue"/>
			<referrer name="XML_GetParentValue"/>
		</member>
		<member name="F:YSI_g_sCurHandler">
			<referrer name="XML_New"/>
			<referrer name="XML_Destroy"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_AddHandler"/>
			<referrer name="XML_RemoveHandler"/>
		</member>
		<member name="F:YSI_g_sEndTag">
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_GetKeyValue"/>
			<referrer name="XML_GetParentValue"/>
		</member>
		<member name="F:YSI_g_sFirstSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sHandlers">
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_AddHandler"/>
			<referrer name="XML_RemoveHandler"/>
		</member>
		<member name="F:YSI_g_sLastSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sParameters">
			<referrer name="XML_Push"/>
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_GetKeyValue"/>
			<referrer name="XML_GetParentValue"/>
		</member>
		<member name="F:YSI_g_sPlayerDraws">
			<tagname value="Bit"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_HideForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_HideForAll"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="TD_MorphTDInternal"/>
		</member>
		<member name="F:YSI_g_sPlayerTimers">
			<referrer name="@yH_PlayerConnect1"/>
			<referrer name="@yH_PlayerDisconnect1"/>
			<referrer name="_Timer_D"/>
		</member>
		<member name="F:YSI_g_sTDData">
			<referrer name="TD_Create"/>
			<referrer name="TD_Textdraw"/>
			<referrer name="TD_GetNamed"/>
			<referrer name="TD_GetID"/>
			<referrer name="TD_Clone"/>
			<referrer name="TD_GetStyleData"/>
			<referrer name="TD_Name"/>
			<referrer name="TD_StylePosition"/>
			<referrer name="TD_StyleXPos"/>
			<referrer name="TD_StyleYPos"/>
			<referrer name="TD_LetterSize"/>
			<referrer name="TD_LetterX"/>
			<referrer name="TD_LetterY"/>
			<referrer name="TD_TextSize"/>
			<referrer name="TD_TextX"/>
			<referrer name="TD_TextY"/>
			<referrer name="TD_Alignment"/>
			<referrer name="TD_Colour"/>
			<referrer name="TD_UseBox"/>
			<referrer name="TD_BoxColour"/>
			<referrer name="TD_SetShadow"/>
			<referrer name="TD_SetOutline"/>
			<referrer name="TD_BackgroundColour"/>
			<referrer name="TD_Font"/>
			<referrer name="TD_SetProportional"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_Render"/>
			<referrer name="TD_Update"/>
			<referrer name="TD_UpdateInternal"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_Display"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_Morph"/>
		</member>
		<member name="F:YSI_g_sTDDisplay">
			<referrer name="@yH_ScriptInit2"/>
			<referrer name="TD_TextPosition"/>
			<referrer name="TD_TextXPos"/>
			<referrer name="TD_TextYPos"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_Render"/>
			<referrer name="TD_Update"/>
			<referrer name="TD_UpdateInternal"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_TryDestroy"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_Unlink"/>
			<referrer name="TD_Link"/>
			<referrer name="TD_Display"/>
			<referrer name="TD_GetDisplayStyle"/>
			<referrer name="TD_SetString"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_HideForPlayerPub"/>
			<referrer name="TD_HideForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_HideForAll"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="TD_Garbage"/>
			<referrer name="TD_Morph"/>
			<referrer name="TD_MorphTDInternal"/>
		</member>
		<member name="F:YSI_g_sUnused">
			<tagname value="Text"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_Display"/>
		</member>
		<member name="F:YSI_g_sUnusedStart">
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
		</member>
		<member name="F:YSI_g_sXMLRules">
			<tagname value="XML"/>
			<referrer name="@yH_ScriptInit2"/>
			<referrer name="TD_Parse"/>
		</member>
		<member name="F:YSI_g_sXMLWriteBuffer">
			<referrer name="XML_AddParameter"/>
			<referrer name="XML_AddItem"/>
			<referrer name="XML_WriteItemData"/>
			<referrer name="XML_WriteItemDataShort"/>
		</member>
		<member name="F:YSI_g_sXMLWritePointer">
			<referrer name="XML_AddParameter"/>
			<referrer name="XML_AddItem"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
		</member>
		<member name="F:YSI_gsOnGameModeInit">
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="F:YSI_gsSpecifier@">
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="F:_@">
			<attribute name="public"/>
			<referrer name="Y@"/>
			<referrer name="_SetColoursCanHaveSpaces@"/>
			<referrer name="_SetColourHash@"/>
		</member>
		<member name="F:dialogmessage">
			<referrer name="DisplayEventLeader"/>
		</member>
		<member name="F:zcmd_g_HasOPCE">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>
		<member name="F:zcmd_g_HasOPCS">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="TD_MorphTDInternal"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="TD_MorphTDInternal"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="DisplayEventLeader"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="DisplayEventLeader"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_PlayerConnect1" syntax="@yH_PlayerConnect1(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_PlayerDisconnect1" syntax="@yH_PlayerDisconnect1(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_PlayerDisconnect2" syntax="@yH_PlayerDisconnect2(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="TD_Destroy"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_ScriptInit1" syntax="@yH_ScriptInit1()">
			<attribute name="public"/>
			<stacksize value="51"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="SetTimerEx"/>
		</member>
		<member name="M:@yH_ScriptInit2" syntax="@yH_ScriptInit2()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="XML_AddHandler"/>
			<dependency name="XML_New"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sXMLRules"/>
		</member>
		<member name="M:ABanPlayer" syntax="ABanPlayer(Banner, Target, Reason[])">
			<stacksize value="192"/>
			<dependency name="PlayerName"/>
			<dependency name="PlayerName"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="format"/>
			<param name="Banner">
			</param>
			<param name="Target">
			</param>
			<param name="Reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetBaseCount" syntax="AMX_GetBaseCount(table, &amp;base, &amp;count)">
			<stacksize value="1"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="base">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntry" syntax="AMX_GetEntry(table, idx, &amp;buffer, pattern[])">
			<stacksize value="42"/>
			<referrer name="AMX_GetPointer"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntryPrefix" syntax="AMX_GetEntryPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetEntrySuffix" syntax="AMX_GetEntrySuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPointerSuffix"/>
			<referrer name="@yH_ScriptInit1"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetGlobal" syntax="AMX_GetGlobal()">
			<stacksize value="2"/>
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
		</member>
		<member name="M:AMX_GetGlobalAddress" syntax="AMX_GetGlobalAddress(...)">
			<stacksize value="2"/>
			<dependency name="AMX_REAL_DATA"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetName" syntax="AMX_GetName(table, idx, buffer[], pattern[])">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetNamePrefix" syntax="AMX_GetNamePrefix(table, idx, buffer[], pattern)">
			<stacksize value="9"/>
			<referrer name="Hooks_FindAll"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNameSuffix" syntax="AMX_GetNameSuffix(table, idx, buffer[], pattern)">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointer" syntax="AMX_GetPointer(table, idx, &amp;buffer, pattern[])">
			<stacksize value="8"/>
			<referrer name="AMX_GetValue"/>
			<referrer name="Hooks_RedirectPublic"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetPointerPrefix" syntax="AMX_GetPointerPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValuePrefix"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointerSuffix" syntax="AMX_GetPointerSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValueSuffix"/>
			<referrer name="@yH_ScriptInit1"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetRelativeAddress" syntax="AMX_GetRelativeAddress(...)">
			<stacksize value="2"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetReturnAddress" syntax="AMX_GetReturnAddress()">
			<stacksize value="1"/>
		</member>
		<member name="M:AMX_GetValue" syntax="AMX_GetValue(table, idx, &amp;buffer, pattern[])">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointer"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetValuePrefix" syntax="AMX_GetValuePrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetValueSuffix" syntax="AMX_GetValueSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_OnScriptInit" syntax="AMX_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ALS_OnDialogResponse"/>
			<dependency name="ALS_OnDynamicObjectMoved"/>
			<dependency name="ALS_OnEnterExitModShop"/>
			<dependency name="ALS_OnFilterScriptExit"/>
			<dependency name="ALS_OnFilterScriptInit"/>
			<dependency name="ALS_OnGameModeExit"/>
			<dependency name="ALS_OnGameModeInit"/>
			<dependency name="ALS_OnObjectMoved"/>
			<dependency name="ALS_OnPlayerClickMap"/>
			<dependency name="ALS_OnPlayerClickPlayer"/>
			<dependency name="ALS_OnPlayerClickPlayerTextDraw"/>
			<dependency name="ALS_OnPlayerClickTextDraw"/>
			<dependency name="ALS_OnPlayerCommandText"/>
			<dependency name="ALS_OnPlayerConnect"/>
			<dependency name="ALS_OnPlayerDeath"/>
			<dependency name="ALS_OnPlayerDisconnect"/>
			<dependency name="ALS_OnPlayerEditAttachedObject"/>
			<dependency name="ALS_OnPlayerEditDynamicObject"/>
			<dependency name="ALS_OnPlayerEditObject"/>
			<dependency name="ALS_OnPlayerEnterArea"/>
			<dependency name="ALS_OnPlayerEnterCheckpoint"/>
			<dependency name="ALS_OnPlayerEnterDynamicArea"/>
			<dependency name="ALS_OnPlayerEnterDynamicCP"/>
			<dependency name="ALS_OnPlayerEnterDynamicRaceCP"/>
			<dependency name="ALS_OnPlayerEnterRaceCheckpoint"/>
			<dependency name="ALS_OnPlayerEnterVehicle"/>
			<dependency name="ALS_OnPlayerExitRace"/>
			<dependency name="ALS_OnPlayerExitVehicle"/>
			<dependency name="ALS_OnPlayerExitedMenu"/>
			<dependency name="ALS_OnPlayerFinishRace"/>
			<dependency name="ALS_OnPlayerGiveDamage"/>
			<dependency name="ALS_OnPlayerInteriorChange"/>
			<dependency name="ALS_OnPlayerKeyStateChange"/>
			<dependency name="ALS_OnPlayerLeaveArea"/>
			<dependency name="ALS_OnPlayerLeaveCheckpoint"/>
			<dependency name="ALS_OnPlayerLeaveDynamicArea"/>
			<dependency name="ALS_OnPlayerLeaveDynamicCP"/>
			<dependency name="ALS_OnPlayerLeaveDynamicRaceCP"/>
			<dependency name="ALS_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="ALS_OnPlayerLogin"/>
			<dependency name="ALS_OnPlayerLogout"/>
			<dependency name="ALS_OnPlayerObjectMoved"/>
			<dependency name="ALS_OnPlayerPickUpDynamicPickup"/>
			<dependency name="ALS_OnPlayerPickUpPickup"/>
			<dependency name="ALS_OnPlayerRequestClass"/>
			<dependency name="ALS_OnPlayerRequestSpawn"/>
			<dependency name="ALS_OnPlayerSelectDynamicObject"/>
			<dependency name="ALS_OnPlayerSelectObject"/>
			<dependency name="ALS_OnPlayerSelectedMenuRow"/>
			<dependency name="ALS_OnPlayerSpawn"/>
			<dependency name="ALS_OnPlayerStateChange"/>
			<dependency name="ALS_OnPlayerStreamIn"/>
			<dependency name="ALS_OnPlayerStreamOut"/>
			<dependency name="ALS_OnPlayerTakeDamage"/>
			<dependency name="ALS_OnPlayerText"/>
			<dependency name="ALS_OnPlayerUpdate"/>
			<dependency name="ALS_OnRaceEnd"/>
			<dependency name="ALS_OnRconCommand"/>
			<dependency name="ALS_OnRconLoginAttempt"/>
			<dependency name="ALS_OnScriptExit"/>
			<dependency name="ALS_OnScriptInit"/>
			<dependency name="ALS_OnUnoccupiedVehicleUpdate"/>
			<dependency name="ALS_OnVehicleDamageStatusUpdate"/>
			<dependency name="ALS_OnVehicleDeath"/>
			<dependency name="ALS_OnVehicleMod"/>
			<dependency name="ALS_OnVehiclePaintjob"/>
			<dependency name="ALS_OnVehicleRespray"/>
			<dependency name="ALS_OnVehicleSpawn"/>
			<dependency name="ALS_OnVehicleStreamIn"/>
			<dependency name="ALS_OnVehicleStreamOut"/>
			<dependency name="Hooks_FindAll"/>
			<dependency name="Hooks_RemovePublic"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<dependency name="printf"/>
		</member>
		<member name="M:AMX_Read" syntax="AMX_Read(addr)">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_ReadArray" syntax="AMX_ReadArray(addr, dest[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadString" syntax="AMX_ReadString(addr, str[], len)">
			<stacksize value="3"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="@yH_ScriptInit1"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_TraceCode" syntax="AMX_TraceCode(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_TraceFunc" syntax="AMX_TraceFunc(b0, b1, b2, b3)">
			<stacksize value="1"/>
			<referrer name="_@_y_amx_inc_@_"/>
			<param name="b0">
			</param>
			<param name="b1">
			</param>
			<param name="b2">
			</param>
			<param name="b3">
			</param>
		</member>
		<member name="M:AMX_TraceMemory" syntax="AMX_TraceMemory(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_HEA"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_Write" syntax="AMX_Write(addr, value)">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<param name="addr">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AMX_WriteArray" syntax="AMX_WriteArray(addr, src[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_WriteString" syntax="AMX_WriteString(addr, str[], len)">
			<stacksize value="3"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AddToEventKills" syntax="AddToEventKills(playerid, killerid, reason)">
			<stacksize value="29"/>
			<dependency name="Event_KDR"/>
			<dependency name="Event_KDR"/>
			<dependency name="Event_TopSpree"/>
			<dependency name="GetPVarInt"/>
			<dependency name="PlayerName"/>
			<dependency name="e_deaths"/>
			<dependency name="e_kills"/>
			<dependency name="e_maxspree"/>
			<dependency name="e_spree"/>
			<dependency name="e_totspree"/>
			<dependency name="p_name"/>
			<dependency name="p_spree"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:AdminLog" syntax="AdminLog(MSG[])">
			<stacksize value="4"/>
			<dependency name="DebugMsg"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AdminLvl" syntax="AdminLvl(playerid)">
			<stacksize value="4"/>
			<referrer name="SendAdminMessageToArray"/>
			<dependency name="GetPVarInt"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AdminsOnline" syntax="AdminsOnline()">
			<stacksize value="5"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="Player@YSII_Ag"/>
		</member>
		<member name="M:AntiCheatMessage" syntax="AntiCheatMessage(MSG[])">
			<stacksize value="4"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Bit_Display" syntax="Bit_Display(array[], size)">
			<stacksize value="141"/>
			<dependency name="Bit_Display"/>
			<dependency name="Cell_ReverseBits"/>
			<dependency name="format"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_GetCount" syntax="Bit_GetCount(array[], size)">
			<stacksize value="4"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_Set" syntax="Bit_Set(array[], slot, set)">
			<stacksize value="1"/>
			<dependency name="cellbits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="slot">
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Bit_SetAll" syntax="Bit_SetAll(array[], set, size)">
			<stacksize value="3"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bits@YSII_Ag" syntax="Bits@YSII_Ag(data[], start, size)">
			<stacksize value="3"/>
			<dependency name="cellbits"/>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Blanks@YSII_Ag" syntax="Blanks@YSII_Ag(data[], start, size)">
			<stacksize value="3"/>
			<dependency name="cellbits"/>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_CallLocalFunction"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="XML_ParseTag"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_CallRemoteFunction"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_CountBits" syntax="Cell_CountBits(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_GetLowestBit" syntax="Cell_GetLowestBit(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_GetLowestComponent" syntax="Cell_GetLowestComponent(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseBits" syntax="Cell_ReverseBits(data)">
			<stacksize value="1"/>
			<referrer name="Bit_Display"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseBytes" syntax="Cell_ReverseBytes(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseNibbles" syntax="Cell_ReverseNibbles(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:CheatLog" syntax="CheatLog(MSG[])">
			<stacksize value="4"/>
			<dependency name="DebugMsg"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Colours_DoHashParse" syntax="Colours_DoHashParse(str[], &amp;idx, checkSpace)">
			<stacksize value="6"/>
			<referrer name="GetColourStream"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="idx">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkSpace">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DebugMsg" syntax="DebugMsg(MSG[])">
			<stacksize value="4"/>
			<referrer name="CheatLog"/>
			<referrer name="AdminLog"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Debug_OnScriptInit" syntax="Debug_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetGlobal"/>
			<dependency name="AMX_HEADER_AMX_VERSION"/>
			<dependency name="AMX_HEADER_CIP"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_DEFSIZE"/>
			<dependency name="AMX_HEADER_FILE_VERSION"/>
			<dependency name="AMX_HEADER_FLAGS"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_MAGIC"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_SIZE"/>
			<dependency name="AMX_HEADER_STP"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_REAL_DATA"/>
		</member>
		<member name="M:Debug_Print0" syntax="Debug_Print0(str[], ...)">
			<stacksize value="4"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<referrer name="Hooks_AddOne"/>
			<dependency name="numargs"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Debug_PrintArray" syntax="Debug_PrintArray(arr[], size)">
			<stacksize value="108"/>
			<dependency name="Debug_PrintArray"/>
			<dependency name="format"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Debug_SetState" syntax="Debug_SetState()">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<transition target=""/>

		</member>
		<member name="M:DisplayEventLeader" syntax="DisplayEventLeader()">
			<stacksize value="39"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="Event_KDR"/>
			<dependency name="Event_KDR"/>
			<dependency name="Event_TopSpree"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="PlayerName"/>
			<dependency name="PlayerName"/>
			<dependency name="SendClientMessage"/>
			<dependency name="death_lead"/>
			<dependency name="dialogmessage"/>
			<dependency name="e_deaths"/>
			<dependency name="e_kills"/>
			<dependency name="e_maxspree"/>
			<dependency name="e_spree"/>
			<dependency name="e_totspree"/>
			<dependency name="event_leader_det"/>
			<dependency name="floatdiv"/>
			<dependency name="format"/>
			<dependency name="kdr_lead"/>
			<dependency name="kill_lead"/>
			<dependency name="p_name"/>
			<dependency name="p_spree"/>
			<dependency name="spree_lead"/>
			<dependency name="totspree_lead"/>
		</member>
		<member name="M:F@" syntax="F@()">
			<stacksize value="6"/>
			<dependency name="F@"/>
			<dependency name="Q@"/>
			<dependency name="getproperty"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:FindValueInArray" syntax="FindValueInArray(value, Array[], ArraySize)">
			<stacksize value="2"/>
			<param name="value">
			</param>
			<param name="Array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ArraySize">
			</param>
		</member>
		<member name="M:G@" syntax="G@(...)">
			<stacksize value="1"/>
			<dependency name="G@"/>
			<dependency name="Q@"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForAll"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForPlayer"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GetColour" syntax="GetColour(name[], alpha)">
			<stacksize value="9"/>
			<referrer name="TD_LoadColour"/>
			<referrer name="TD_Textdraw"/>
			<dependency name="GetColourHash"/>
			<dependency name="YHash"/>
			<dependency name="YSI_g_sCheckSpaces"/>
			<dependency name="false"/>
			<dependency name="hash_bernstein"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="alpha">
			</param>
		</member>
		<member name="M:GetColourHash" syntax="GetColourHash(hash, alpha)">
			<stacksize value="3"/>
			<referrer name="_SetColourHash"/>
			<referrer name="GetColour"/>
			<dependency name="YSI_g_sColours"/>
			<dependency name="true"/>
			<param name="hash">
			</param>
			<param name="alpha">
			</param>
		</member>
		<member name="M:GetColourStream" syntax="GetColourStream(str[], &amp;idx, alpha)">
			<stacksize value="11"/>
			<dependency name="Colours_DoHashParse"/>
			<dependency name="YHash"/>
			<dependency name="YSI_g_sCheckSpaces"/>
			<dependency name="YSI_g_sColours"/>
			<dependency name="false"/>
			<dependency name="hash_bernstein"/>
			<dependency name="min"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="idx">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="alpha">
			</param>
		</member>
		<member name="M:GetEmptySlot" syntax="GetEmptySlot(Array[], ArraySize, Empty_Value)">
			<stacksize value="2"/>
			<param name="Array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ArraySize">
			</param>
			<param name="Empty_Value">
			</param>
		</member>
		<member name="M:GetIP" syntax="GetIP(playerid)">
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="M:GetPVarInt" syntax="GetPVarInt(playerid, varname[])">
			<attribute name="native"/>
			<referrer name="AdminLvl"/>
			<referrer name="GetPlayerStatus"/>
			<referrer name="isVIP"/>
			<referrer name="AddToEventKills"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="GetIP"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="ReturnPlayerName"/>
			<referrer name="PlayerName"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerSkin" syntax="GetPlayerSkin(playerid)">
			<attribute name="native"/>
			<referrer name="AdminsOnline"/>
			<referrer name="TAdminsOnline"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerStatus" syntax="GetPlayerStatus(playerid)">
			<stacksize value="4"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerStatus"/>
			<dependency name="P_Status"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:H@" syntax="H@(...)">
			<stacksize value="1"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:HTTP" syntax="HTTP(index, type, url[], data[], callback[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnScriptInit"/>
			<param name="index">
			</param>
			<param name="type">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_AddOne" syntax="Hooks_AddOne(idx, &amp;toaddidx)">
			<stacksize value="4"/>
			<referrer name="Hooks_FindAll"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<param name="idx">
			</param>
			<param name="toaddidx">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_Blank_Return0" syntax="Hooks_Blank_Return0()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_Blank_Return1" syntax="Hooks_Blank_Return1()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_Blank_Return1N" syntax="Hooks_Blank_Return1N()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_FindAll" syntax="Hooks_FindAll(name[], &amp;toaddidx, &amp;start, &amp;end)">
			<stacksize value="41"/>
			<referrer name="AMX_OnScriptInit"/>
			<dependency name="AMX_GetNamePrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Hooks_AddOne"/>
			<dependency name="false"/>
			<dependency name="funcidx"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="toaddidx">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_RedirectPublic" syntax="Hooks_RedirectPublic(from[], to[], final)">
			<stacksize value="10"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_GetPointer"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_Blank_Return0"/>
			<dependency name="Hooks_Blank_Return1"/>
			<dependency name="Hooks_Blank_Return1N"/>
			<dependency name="strfind"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="to">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="final">
			</param>
		</member>
		<member name="M:Hooks_RemovePublic" syntax="Hooks_RemovePublic(from[], final)">
			<stacksize value="8"/>
			<referrer name="AMX_OnScriptInit"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_Blank_Return0"/>
			<dependency name="Hooks_Blank_Return1"/>
			<dependency name="Hooks_Blank_Return1N"/>
			<dependency name="strfind"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="final">
			</param>
		</member>
		<member name="M:IRC_GroupSay" syntax="IRC_GroupSay(Type, LOL, MSG[])">
			<stacksize value="5"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendTesterChat"/>
			<param name="Type">
			</param>
			<param name="LOL">
			</param>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsAdmin" syntax="IsAdmin(playerid, Level)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="Level">
			</param>
		</member>
		<member name="M:IsArrayEmpty" syntax="IsArrayEmpty(Array[], ArraySize, Empty_Value)">
			<stacksize value="3"/>
			<param name="Array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ArraySize">
			</param>
			<param name="Empty_Value">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
			<referrer name="TD_HideForPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_AddInternal" syntax="Itter_AddInternal(&amp;count, array[], value, size)">
			<stacksize value="3"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ClearInternal" syntax="Itter_ClearInternal(&amp;count, array[], size)">
			<stacksize value="3"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ContainsInternal" syntax="Itter_ContainsInternal(array[], value, size)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_FreeInternal" syntax="Itter_FreeInternal(array[], size)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_InitInternal" syntax="Itter_InitInternal(arr[][], s0, s1)">
			<stacksize value="4"/>
			<param name="arr">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="s0">
			</param>
			<param name="s1">
			</param>
		</member>
		<member name="M:Itter_OPDCInternal" syntax="Itter_OPDCInternal(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_OnFilterScriptInit" syntax="Itter_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnFilterScriptInit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:Itter_OnGameModeInit" syntax="Itter_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnGameModeInit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:Itter_OnPlayerConnect" syntax="Itter_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerConnect"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_OnPlayerDisconnect" syntax="Itter_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerDisconnect"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Itter_PrevInternal" syntax="Itter_PrevInternal(array[], size, slot)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:Itter_RandomInternal" syntax="Itter_RandomInternal(count, array[], size)">
			<stacksize value="4"/>
			<dependency name="random"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_RemoveInternal" syntax="Itter_RemoveInternal(&amp;count, array[], value, size)">
			<stacksize value="9"/>
			<referrer name="Itter_OPDCInternal"/>
			<dependency name="Itter_SafeRemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_SafeRemoveInternal" syntax="Itter_SafeRemoveInternal(&amp;count, array[], value, &amp;last, size)">
			<stacksize value="2"/>
			<referrer name="Itter_RemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<attribute name="native"/>
			<referrer name="_Timer_I"/>
			<referrer name="_Timer_D"/>
			<referrer name="_Timer_F"/>
			<referrer name="TD_Delete"/>
			<param name="timerid">
			</param>
		</member>
		<member name="M:Malloc_Allocate" syntax="Malloc_Allocate(size)">
			<tagname value="Alloc"/>
			<stacksize value="4"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="calloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sUnusedStart"/>
			<param name="size">
			</param>
		</member>
		<member name="M:Malloc_Free" syntax="Malloc_Free(slot)">
			<stacksize value="5"/>
			<referrer name="_Timer_F"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sUnusedStart"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
			</param>
		</member>
		<member name="M:Malloc_GetA" syntax="Malloc_GetA(target[], length, array, index)">
			<stacksize value="8"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="length">
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:Malloc_GetS" syntax="Malloc_GetS(target[], length, array, index)">
			<stacksize value="3"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="length">
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:Malloc_NewS" syntax="Malloc_NewS(string[], pack)">
			<tagname value="Alloc"/>
			<stacksize value="7"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Malloc_SetA" syntax="Malloc_SetA(array, index, str[], len)">
			<stacksize value="8"/>
			<referrer name="_Timer_A"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:Malloc_SetS" syntax="Malloc_SetS(array, index, str[])">
			<stacksize value="5"/>
			<referrer name="_Timer_S"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="cellmax"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Malloc_SetVAA" syntax="Malloc_SetVAA(array, index, arg)">
			<stacksize value="5"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<dependency name="printf"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="arg">
			</param>
		</member>
		<member name="M:Malloc_SetVAS" syntax="Malloc_SetVAS(array, index, arg)">
			<stacksize value="2"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="arg">
			</param>
		</member>
		<member name="M:MoneyLog" syntax="MoneyLog(MSG[])">
			<stacksize value="4"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnClientCheckResponse" syntax="OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
			<param name="memaddr">
			</param>
			<param name="retndata">
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnDialogResponse"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnDynamicObjectMoved"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnEnterExitModShop"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="port">
			</param>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnObjectMoved"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickMap"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickPlayer"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickPlayerTextDraw"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickTextDraw"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmdtext[], success)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="format"/>
			<dependency name="tolower"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gOPC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerDeath"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="SSCANF_Leave"/>
			<dependency name="SSCANF_gOPDC"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEditAttachedObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEditDynamicObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEditObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEnterArea" syntax="OnPlayerEnterArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterDynamicArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterDynamicCP"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterDynamicRaceCP"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterRaceCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterVehicle"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitRace" syntax="OnPlayerExitRace(playerid, race)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitRace"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitVehicle"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitedMenu"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerFinishRace" syntax="OnPlayerFinishRace(playerid, race, position, prize, time)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerFinishRace"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
			<param name="position">
			</param>
			<param name="prize">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerGiveDamage"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damaged_actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerInteriorChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerKeyStateChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveArea" syntax="OnPlayerLeaveArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveDynamicArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveDynamicCP"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveDynamicRaceCP"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLogin" syntax="OnPlayerLogin(playerid, uid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLogin"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:OnPlayerLogout" syntax="OnPlayerLogout(playerid, uid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLogout"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerObjectMoved"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerPickUpDynamicPickup"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerPickUpPickup"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerRequestClass"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerRequestSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSelectDynamicObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSelectObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSelectedMenuRow"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerShootDynamicObject" syntax="OnPlayerShootDynamicObject(playerid, weaponid, objectid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStateChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStreamIn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStreamOut"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerTakeDamage"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerText"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnRaceEnd" syntax="OnRaceEnd(race)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRaceEnd"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="race">
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRconCommand"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRconLoginAttempt"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnUnoccupiedVehicleUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleDamageStatusUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleDeath"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleMod"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehiclePaintjob"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleRespray"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="newstate">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleStreamIn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleStreamOut"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:PlayerName" syntax="PlayerName(playerid)">
			<stacksize value="29"/>
			<referrer name="ABanPlayer"/>
			<referrer name="AddToEventKills"/>
			<referrer name="DisplayEventLeader"/>
			<dependency name="GetPlayerName"/>
			<dependency name="PlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:R@" syntax="R@(buffer[])">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ResetEKForEvent" syntax="ResetEKForEvent()">
			<stacksize value="5"/>
			<dependency name="Event_TopSpree"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="ResetEventKills"/>
			<dependency name="p_name"/>
			<dependency name="p_spree"/>
		</member>
		<member name="M:ResetEventKills" syntax="ResetEventKills(playerid)">
			<stacksize value="1"/>
			<referrer name="ResetEKForEvent"/>
			<dependency name="Event_KDR"/>
			<dependency name="Event_KDR"/>
			<dependency name="e_deaths"/>
			<dependency name="e_kills"/>
			<dependency name="e_maxspree"/>
			<dependency name="e_spree"/>
			<dependency name="e_totspree"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerName" syntax="ReturnPlayerName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnPlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@" syntax="S@(v)">
			<stacksize value="6"/>
			<dependency name="Q@"/>
			<dependency name="S@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<dependency name="strunpack"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnDialogResponse" syntax="S@@_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnDynamicObjectMoved" syntax="S@@_OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:S@@_OnEnterExitModShop" syntax="S@@_OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:S@@_OnFilterScriptExit" syntax="S@@_OnFilterScriptExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnFilterScriptInit" syntax="S@@_OnFilterScriptInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnGameModeExit" syntax="S@@_OnGameModeExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnGameModeInit" syntax="S@@_OnGameModeInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnObjectMoved" syntax="S@@_OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickMap" syntax="S@@_OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickPlayer" syntax="S@@_OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickPlayerTextDraw" syntax="S@@_OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickTextDraw" syntax="S@@_OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerCommandText" syntax="S@@_OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerConnect" syntax="S@@_OnPlayerConnect(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerDeath" syntax="S@@_OnPlayerDeath(playerid, killerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:S@@_OnPlayerDisconnect" syntax="S@@_OnPlayerDisconnect(playerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEditAttachedObject" syntax="S@@_OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerEditDynamicObject" syntax="S@@_OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerEditObject" syntax="S@@_OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterArea" syntax="S@@_OnPlayerEnterArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterCheckpoint" syntax="S@@_OnPlayerEnterCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterDynamicArea" syntax="S@@_OnPlayerEnterDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterDynamicCP" syntax="S@@_OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterDynamicRaceCP" syntax="S@@_OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterRaceCheckpoint" syntax="S@@_OnPlayerEnterRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterVehicle" syntax="S@@_OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitRace" syntax="S@@_OnPlayerExitRace(playerid, race)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitVehicle" syntax="S@@_OnPlayerExitVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitedMenu" syntax="S@@_OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerFinishRace" syntax="S@@_OnPlayerFinishRace(playerid, race, position, prize, time)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
			<param name="position">
			</param>
			<param name="prize">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:S@@_OnPlayerGiveDamage" syntax="S@@_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:S@@_OnPlayerInteriorChange" syntax="S@@_OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerKeyStateChange" syntax="S@@_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveArea" syntax="S@@_OnPlayerLeaveArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveCheckpoint" syntax="S@@_OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveDynamicArea" syntax="S@@_OnPlayerLeaveDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveDynamicCP" syntax="S@@_OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveDynamicRaceCP" syntax="S@@_OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveRaceCheckpoint" syntax="S@@_OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLogin" syntax="S@@_OnPlayerLogin(playerid, uid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLogout" syntax="S@@_OnPlayerLogout(playerid, uid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerObjectMoved" syntax="S@@_OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerPickUpDynamicPickup" syntax="S@@_OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerPickUpPickup" syntax="S@@_OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerRequestClass" syntax="S@@_OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="FoCo_Team"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerRequestSpawn" syntax="S@@_OnPlayerRequestSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerSelectDynamicObject" syntax="S@@_OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerSelectObject" syntax="S@@_OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerSelectedMenuRow" syntax="S@@_OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:S@@_OnPlayerSpawn" syntax="S@@_OnPlayerSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStateChange" syntax="S@@_OnPlayerStateChange(playerid, newstate, oldstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStreamIn" syntax="S@@_OnPlayerStreamIn(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStreamOut" syntax="S@@_OnPlayerStreamOut(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerTakeDamage" syntax="S@@_OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:S@@_OnPlayerText" syntax="S@@_OnPlayerText(playerid, text[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerUpdate" syntax="S@@_OnPlayerUpdate(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnRaceEnd" syntax="S@@_OnRaceEnd(race)">
			<stacksize value="1"/>
			<param name="race">
			</param>
		</member>
		<member name="M:S@@_OnRconCommand" syntax="S@@_OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnRconLoginAttempt" syntax="S@@_OnRconLoginAttempt(ip[], password[], success)">
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:S@@_OnScriptExit" syntax="S@@_OnScriptExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnUnoccupiedVehicleUpdate" syntax="S@@_OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnVehicleDamageStatusUpdate" syntax="S@@_OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleDeath" syntax="S@@_OnVehicleDeath(vehicleid, killerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleMod" syntax="S@@_OnVehicleMod(playerid, vehicleid, componentid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:S@@_OnVehiclePaintjob" syntax="S@@_OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleRespray" syntax="S@@_OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:S@@_OnVehicleSpawn" syntax="S@@_OnVehicleSpawn(vehicleid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleStreamIn" syntax="S@@_OnVehicleStreamIn(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleStreamOut" syntax="S@@_OnVehicleStreamOut(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<param name="players">
			</param>
			<param name="invalid">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="npc">
			</param>
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="true"/>
		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:ScriptInit_OnFilterScriptExit" syntax="ScriptInit_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnFilterScriptExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnFilterScriptInit" syntax="ScriptInit_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
		</member>
		<member name="M:ScriptInit_OnGameModeExit" syntax="ScriptInit_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnGameModeExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnGameModeInit" syntax="ScriptInit_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
			<dependency name="YSI_gsOnGameModeInit"/>
			<dependency name="YSI_gsSpecifier@"/>
		</member>
		<member name="M:ScriptInit_OnScriptExit" syntax="ScriptInit_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnScriptExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnScriptInit" syntax="ScriptInit_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="HTTP"/>
			<dependency name="print"/>
		</member>
		<member name="M:SendAdminMessage" syntax="SendAdminMessage(Level, MSG[])">
			<stacksize value="4"/>
			<referrer name="IRC_GroupSay"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="Level">
			</param>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendAdminMessageToArray" syntax="SendAdminMessageToArray(Array[], ArraySize, ArrayMSG[], AdmnLvl)">
			<stacksize value="6"/>
			<dependency name="AdminLvl"/>
			<dependency name="SendClientMessage"/>
			<param name="Array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ArraySize">
			</param>
			<param name="ArrayMSG">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="AdmnLvl">
			</param>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="cmd_adminlevel"/>
			<referrer name="cmd_setvip"/>
			<referrer name="SendAdminMessageToArray"/>
			<referrer name="DisplayEventLeader"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="SendAdminMessage"/>
			<referrer name="SendTesterChat"/>
			<referrer name="AntiCheatMessage"/>
			<referrer name="MoneyLog"/>
			<referrer name="ABanPlayer"/>
			<referrer name="DebugMsg"/>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToAll" syntax="SendPlayerMessageToAll(senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToPlayer" syntax="SendPlayerMessageToPlayer(playerid, senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendTesterChat" syntax="SendTesterChat(MSG[])">
			<stacksize value="4"/>
			<referrer name="IRC_GroupSay"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="MSG">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetColour" syntax="SetColour(name[], color)">
			<stacksize value="9"/>
			<dependency name="SetColourHash"/>
			<dependency name="YHash"/>
			<dependency name="YSI_g_sCheckSpaces"/>
			<dependency name="false"/>
			<dependency name="hash_bernstein"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:SetColourHash" syntax="SetColourHash(hash, color)">
			<stacksize value="5"/>
			<referrer name="SetColour"/>
			<referrer name="TD_LoadColour"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="_SetColourHash_"/>
			<param name="hash">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:SetColoursCanHaveSpaces" syntax="SetColoursCanHaveSpaces(set)">
			<stacksize value="4"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="_SetColoursCanHaveSpaces_"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetPVarInt" syntax="SetPVarInt(playerid, varname[], int_value)">
			<attribute name="native"/>
			<referrer name="cmd_adminlevel"/>
			<referrer name="cmd_setvip"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="int_value">
			</param>
		</member>
		<member name="M:SetTimer" syntax="SetTimer(funcname[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="_Timer_I"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_SetTimerEx"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="@yH_ScriptInit1"/>
			<referrer name="_Timer_D"/>
			<referrer name="TD_SetTime"/>
			<referrer name="TD_Update"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_Morph"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnPluginError" syntax="Streamer_OnPluginError(error[])">
			<stacksize value="1"/>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:StripNL" syntax="StripNL(str[])">
			<stacksize value="4"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:T@" syntax="T@()">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:TAdminsOnline" syntax="TAdminsOnline()">
			<stacksize value="5"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="Player@YSII_Ag"/>
		</member>
		<member name="M:TD_Alignment" syntax="TD_Alignment(styleID, alignment)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_ALIGN"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:TD_BackgroundColour" syntax="TD_BackgroundColour(styleID, colour)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BG"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:TD_BoxColour" syntax="TD_BoxColour(styleID, colour)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BOX"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:TD_Clone" syntax="TD_Clone(styleID, name[])">
			<tagname value="Style"/>
			<stacksize value="6"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_NAME"/>
			<dependency name="E_TD_DATA_UPDATE"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="bernstein"/>
			<dependency name="strpack"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_Colour" syntax="TD_Colour(styleID, colour)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_COLOUR"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:TD_Create" syntax="TD_Create(x, y, letterX, letterY, textX, textY, colour, boxColour, bgColour, shadow, outline, align, font, proportional, box, time, name[])">
			<tagname value="Style"/>
			<stacksize value="6"/>
			<referrer name="TD_Textdraw"/>
			<dependency name="E_TD_DATA_BG"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_BOX"/>
			<dependency name="E_TD_DATA_COLOUR"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="E_TD_DATA_NAME"/>
			<dependency name="E_TD_DATA_TIME"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="E_TD_DATA_UPDATE"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="bernstein"/>
			<dependency name="e_TD_BITS_ALIGN"/>
			<dependency name="e_TD_BITS_BOX"/>
			<dependency name="e_TD_BITS_FONT"/>
			<dependency name="e_TD_BITS_OUTLINE"/>
			<dependency name="e_TD_BITS_PROP"/>
			<dependency name="e_TD_BITS_SHADOW"/>
			<dependency name="strpack"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="letterX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="letterY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="textX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="textY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="boxColour">
			</param>
			<param name="bgColour">
			</param>
			<param name="shadow">
			</param>
			<param name="outline">
			</param>
			<param name="align">
			</param>
			<param name="font">
			</param>
			<param name="proportional">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="box">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_Delete" syntax="TD_Delete(styleId)">
			<stacksize value="6"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_NAME"/>
			<dependency name="E_TD_DATA_UPDATE"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="KillTimer"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sUnused"/>
			<dependency name="cellbits"/>
			<param name="styleId">
				<paraminfo>Style </paraminfo>
			</param>
		</member>
		<member name="M:TD_Destroy" syntax="TD_Destroy(textDraw)">
			<stacksize value="9"/>
			<referrer name="TD_TryDestroy"/>
			<referrer name="TD_HideForPlayer"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="TD_Garbage"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sUnused"/>
			<dependency name="cellbits"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_Display" syntax="TD_Display(text[], id, x, y)">
			<tagname value="Text"/>
			<stacksize value="7"/>
			<referrer name="TD_DisplayForPlayer"/>
			<referrer name="TD_DisplayForAll"/>
			<referrer name="TD_DisplayHashed"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="TD_Render"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sUnused"/>
			<dependency name="strpack"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayForAll" syntax="TD_DisplayForAll(text[], id, x, y)">
			<tagname value="Text"/>
			<stacksize value="8"/>
			<referrer name="TD_DisplayHashedForAll"/>
			<dependency name="TD_Display"/>
			<dependency name="TD_Garbage"/>
			<dependency name="TD_ShowForAll"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayForPlayer" syntax="TD_DisplayForPlayer(playerid, text[], id, x, y)">
			<tagname value="Text"/>
			<stacksize value="8"/>
			<referrer name="TD_DisplayHashedForPlayer"/>
			<dependency name="TD_Display"/>
			<dependency name="TD_Garbage"/>
			<dependency name="TD_ShowForPlayer"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayHashed" syntax="TD_DisplayHashed(text[], hash, x, y)">
			<tagname value="Text"/>
			<stacksize value="8"/>
			<referrer name="TD_DisplayNamed"/>
			<dependency name="TD_Display"/>
			<dependency name="TD_GetID"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayHashedForAll" syntax="TD_DisplayHashedForAll(text[], hash, x, y)">
			<tagname value="Text"/>
			<stacksize value="8"/>
			<referrer name="TD_DisplayNamedForAll"/>
			<dependency name="TD_DisplayForAll"/>
			<dependency name="TD_GetID"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayHashedForPlayer" syntax="TD_DisplayHashedForPlayer(playerid, text[], hash, x, y)">
			<tagname value="Text"/>
			<stacksize value="9"/>
			<referrer name="TD_DisplayNamedForPlayer"/>
			<dependency name="TD_DisplayForPlayer"/>
			<dependency name="TD_GetID"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayNamed" syntax="TD_DisplayNamed(text[], style[], x, y)">
			<tagname value="Text"/>
			<stacksize value="7"/>
			<dependency name="TD_DisplayHashed"/>
			<dependency name="bernstein"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayNamedForAll" syntax="TD_DisplayNamedForAll(text[], style[], x, y)">
			<tagname value="Text"/>
			<stacksize value="7"/>
			<dependency name="TD_DisplayHashedForAll"/>
			<dependency name="bernstein"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_DisplayNamedForPlayer" syntax="TD_DisplayNamedForPlayer(playerid, text[], style[], x, y)">
			<tagname value="Text"/>
			<stacksize value="8"/>
			<dependency name="TD_DisplayHashedForPlayer"/>
			<dependency name="bernstein"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_Font" syntax="TD_Font(styleID, font)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_FONT"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:TD_Garbage" syntax="TD_Garbage(textDraw)">
			<stacksize value="4"/>
			<referrer name="TD_DisplayForPlayer"/>
			<referrer name="TD_DisplayForAll"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="TD_Destroy"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_GetDisplayStyle" syntax="TD_GetDisplayStyle(td)">
			<tagname value="Style"/>
			<stacksize value="1"/>
			<referrer name="TD_Morph"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="td">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_GetID" syntax="TD_GetID(hash)">
			<tagname value="Style"/>
			<stacksize value="2"/>
			<referrer name="TD_DisplayHashed"/>
			<referrer name="TD_DisplayHashedForPlayer"/>
			<referrer name="TD_DisplayHashedForAll"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="hash">
			</param>
		</member>
		<member name="M:TD_GetNamed" syntax="TD_GetNamed(name[])">
			<tagname value="Style"/>
			<stacksize value="5"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="bernstein"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_GetStyleData" syntax="TD_GetStyleData(styleID, data[])">
			<stacksize value="1"/>
			<referrer name="TD_MorphTDInternal"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:TD_HideForAll" syntax="TD_HideForAll(textDraw)">
			<stacksize value="7"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="TD_TryDestroy"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_HideForPlayer" syntax="TD_HideForPlayer(playerid, textDraw)">
			<stacksize value="5"/>
			<referrer name="TD_HideForPlayerPub"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="TD_Destroy"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_HideForPlayerPub" syntax="TD_HideForPlayerPub(playerid, textDraw, revision)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="TD_HideForPlayer"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="playerid">
			</param>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="revision">
			</param>
		</member>
		<member name="M:TD_LetterSize" syntax="TD_LetterSize(styleID, x, y)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_LetterX" syntax="TD_LetterX(styleID, x)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_LetterY" syntax="TD_LetterY(styleID, y)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_Link" syntax="TD_Link(base, other)">
			<stacksize value="4"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="TD_Unlink"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="base">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="other">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_LoadColour" syntax="TD_LoadColour()">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetColour"/>
			<dependency name="SetColourHash"/>
			<dependency name="XML_GetKeyValue"/>
			<dependency name="YHash"/>
			<dependency name="false"/>
			<dependency name="hash_bernstein"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
		</member>
		<member name="M:TD_Morph" syntax="TD_Morph(textDraw, style, time, delay)">
			<stacksize value="14"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TD_GetDisplayStyle"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="style">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="delay">
			</param>
		</member>
		<member name="M:TD_MorphTDInternal" syntax="TD_MorphTDInternal(td, from, to, speed, pos, revision)">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="E_TD_DATA"/>
			<dependency name="E_TD_DATA_BG"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_BOX"/>
			<dependency name="E_TD_DATA_COLOUR"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TD_GetStyleData"/>
			<dependency name="TD_RenderInternal"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<dependency name="printf"/>
			<param name="td">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="from">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="to">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="speed">
			</param>
			<param name="pos">
			</param>
			<param name="revision">
			</param>
		</member>
		<member name="M:TD_Name" syntax="TD_Name(styleID, name[])">
			<stacksize value="5"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_NAME"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="bernstein"/>
			<dependency name="strpack"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_Parse" syntax="TD_Parse(filename[])">
			<stacksize value="5"/>
			<dependency name="XML_Parse"/>
			<dependency name="YSI_g_sXMLRules"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_Render" syntax="TD_Render(text[], id, slot)">
			<tagname value="Text"/>
			<stacksize value="7"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Display"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_ShowForAll"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="TD_RenderInternal"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="slot">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_RenderInternal" syntax="TD_RenderInternal(text[], style[], x, y)">
			<tagname value="Text"/>
			<stacksize value="7"/>
			<referrer name="TD_Render"/>
			<referrer name="TD_MorphTDInternal"/>
			<dependency name="E_TD_DATA_BG"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_BOX"/>
			<dependency name="E_TD_DATA_COLOUR"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColor"/>
			<dependency name="TextDrawBoxColor"/>
			<dependency name="TextDrawColor"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="e_TD_BITS_ALIGN"/>
			<dependency name="e_TD_BITS_BOX"/>
			<dependency name="e_TD_BITS_FONT"/>
			<dependency name="e_TD_BITS_OUTLINE"/>
			<dependency name="e_TD_BITS_PROP"/>
			<dependency name="e_TD_BITS_SHADOW"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_SetOutline" syntax="TD_SetOutline(styleID, size)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_OUTLINE"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TD_SetProportional" syntax="TD_SetProportional(styleID, set)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_PROP"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TD_SetShadow" syntax="TD_SetShadow(styleID, size)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_SHADOW"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TD_SetString" syntax="TD_SetString(td, text[])">
			<stacksize value="5"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="strpack"/>
			<param name="td">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TD_SetTime" syntax="TD_SetTime(styleID, time, existing)">
			<stacksize value="15"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_TIME"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="existing">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TD_ShowForAll" syntax="TD_ShowForAll(textDraw)">
			<stacksize value="17"/>
			<referrer name="TD_DisplayForAll"/>
			<dependency name="E_TD_DATA_TIME"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TD_Render"/>
			<dependency name="TD_TryDestroy"/>
			<dependency name="TextDrawShowForAll"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_ShowForPlayer" syntax="TD_ShowForPlayer(playerid, textDraw)">
			<stacksize value="12"/>
			<referrer name="TD_DisplayForPlayer"/>
			<dependency name="E_TD_DATA_TIME"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_REVISION"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TD_Render"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_StylePosition" syntax="TD_StylePosition(styleID, x, y)">
			<stacksize value="5"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="true"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_StyleXPos" syntax="TD_StyleXPos(styleID, x)">
			<stacksize value="5"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="true"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_StyleYPos" syntax="TD_StyleYPos(styleID, y)">
			<stacksize value="5"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="true"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextPosition" syntax="TD_TextPosition(textID, x, y)">
			<stacksize value="6"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="TD_UpdateOne"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textID">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextSize" syntax="TD_TextSize(styleID, x, y)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextX" syntax="TD_TextX(styleID, x)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextXPos" syntax="TD_TextXPos(textID, x)">
			<stacksize value="6"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="TD_UpdateOne"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textID">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextY" syntax="TD_TextY(styleID, y)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_TextYPos" syntax="TD_TextYPos(textID, y)">
			<stacksize value="6"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="E_TD_DISPLAY_STYLE"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="TD_UpdateOne"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textID">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TD_Textdraw" syntax="TD_Textdraw()">
			<attribute name="public"/>
			<stacksize value="23"/>
			<dependency name="E_TD_DATA_BG"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_BOX"/>
			<dependency name="E_TD_DATA_COLOUR"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_LX"/>
			<dependency name="E_TD_DATA_LY"/>
			<dependency name="E_TD_DATA_NAME"/>
			<dependency name="E_TD_DATA_TIME"/>
			<dependency name="E_TD_DATA_TX"/>
			<dependency name="E_TD_DATA_TY"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="GetColour"/>
			<dependency name="TD_Create"/>
			<dependency name="XML_GetKeyValue"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="bernstein"/>
			<dependency name="e_TD_BITS_ALIGN"/>
			<dependency name="e_TD_BITS_BOX"/>
			<dependency name="e_TD_BITS_FONT"/>
			<dependency name="e_TD_BITS_OUTLINE"/>
			<dependency name="e_TD_BITS_PROP"/>
			<dependency name="e_TD_BITS_SHADOW"/>
			<dependency name="floatstr"/>
			<dependency name="strcmp"/>
			<dependency name="strpack"/>
			<dependency name="strval"/>
			<dependency name="td_align_center"/>
			<dependency name="td_align_left"/>
			<dependency name="td_align_right"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
		</member>
		<member name="M:TD_TryDestroy" syntax="TD_TryDestroy(textDraw)">
			<stacksize value="4"/>
			<referrer name="TD_ShowForAll"/>
			<referrer name="TD_HideForAll"/>
			<dependency name="E_TD_DISPLAY_LIFE"/>
			<dependency name="TD_Destroy"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="textDraw">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_Unlink" syntax="TD_Unlink(td)">
			<stacksize value="4"/>
			<referrer name="TD_Link"/>
			<dependency name="E_TD_DISPLAY_LINKED"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="td">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TD_Update" syntax="TD_Update(id, pos)">
			<stacksize value="7"/>
			<referrer name="TD_StylePosition"/>
			<referrer name="TD_StyleXPos"/>
			<referrer name="TD_StyleYPos"/>
			<referrer name="TD_LetterSize"/>
			<referrer name="TD_LetterX"/>
			<referrer name="TD_LetterY"/>
			<referrer name="TD_TextSize"/>
			<referrer name="TD_TextX"/>
			<referrer name="TD_TextY"/>
			<referrer name="TD_Alignment"/>
			<referrer name="TD_Colour"/>
			<referrer name="TD_UseBox"/>
			<referrer name="TD_BoxColour"/>
			<referrer name="TD_SetShadow"/>
			<referrer name="TD_SetOutline"/>
			<referrer name="TD_BackgroundColour"/>
			<referrer name="TD_Font"/>
			<referrer name="TD_SetProportional"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="E_TD_DATA_UPDATE"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DATA_X"/>
			<dependency name="E_TD_DATA_Y"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="E_TD_DISPLAY_X"/>
			<dependency name="E_TD_DISPLAY_Y"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="pos">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TD_UpdateInternal" syntax="TD_UpdateInternal(id)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="E_TD_DATA_USE"/>
			<dependency name="E_TD_DISPLAY_NEXT"/>
			<dependency name="TD_UpdateOne"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
		</member>
		<member name="M:TD_UpdateOne" syntax="TD_UpdateOne(slot, id)">
			<stacksize value="8"/>
			<referrer name="TD_TextPosition"/>
			<referrer name="TD_TextXPos"/>
			<referrer name="TD_TextYPos"/>
			<referrer name="TD_UpdateInternal"/>
			<dependency name="E_TD_DISPLAY_REAL"/>
			<dependency name="E_TD_DISPLAY_TEXT"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="TD_Render"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="YSI_g_sPlayerDraws"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="YSI_g_sTDDisplay"/>
			<dependency name="cellbits"/>
			<param name="slot">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="id">
				<paraminfo>Style </paraminfo>
			</param>
		</member>
		<member name="M:TD_UseBox" syntax="TD_UseBox(styleID, use)">
			<stacksize value="4"/>
			<dependency name="E_TD_DATA_BITS"/>
			<dependency name="E_TD_DATA_HASH"/>
			<dependency name="TD_Update"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="YSI_g_sTDData"/>
			<dependency name="e_TD_BITS_BOX"/>
			<param name="styleID">
				<paraminfo>Style </paraminfo>
			</param>
			<param name="use">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawAlignment" syntax="TextDrawAlignment(text, alignment)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:TextDrawBackgroundColor" syntax="TextDrawBackgroundColor(text, color)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawBoxColor" syntax="TextDrawBoxColor(text, color)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawColor" syntax="TextDrawColor(text, color)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="TD_RenderInternal"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawDestroy" syntax="TextDrawDestroy(text)">
			<attribute name="native"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_Delete"/>
			<referrer name="TD_Destroy"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawFont" syntax="TextDrawFont(text, font)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:TextDrawHideForAll" syntax="TextDrawHideForAll(text)">
			<attribute name="native"/>
			<referrer name="TD_HideForAll"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawHideForPlayer" syntax="TextDrawHideForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="TD_HideForPlayer"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawLetterSize" syntax="TextDrawLetterSize(text, x, y)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawSetOutline" syntax="TextDrawSetOutline(text, size)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TextDrawSetProportional" syntax="TextDrawSetProportional(text, set)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="set">
			</param>
		</member>
		<member name="M:TextDrawSetShadow" syntax="TextDrawSetShadow(text, size)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(text, string[])">
			<attribute name="native"/>
			<referrer name="TD_SetString"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawShowForAll" syntax="TextDrawShowForAll(text)">
			<attribute name="native"/>
			<referrer name="TD_ShowForAll"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawShowForPlayer" syntax="TextDrawShowForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="TD_UpdateOne"/>
			<referrer name="TD_ShowForPlayer"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawTextSize" syntax="TextDrawTextSize(text, x, y)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawUseBox" syntax="TextDrawUseBox(text, use)">
			<attribute name="native"/>
			<referrer name="TD_RenderInternal"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="use">
			</param>
		</member>
		<member name="M:Timer_GetSingleSlot" syntax="Timer_GetSingleSlot(len)">
			<tagname value="Alloc"/>
			<stacksize value="5"/>
			<referrer name="_Timer_S"/>
			<referrer name="_Timer_A"/>
			<referrer name="_Timer_C"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<param name="len">
			</param>
		</member>
		<member name="M:W@" syntax="W@(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_SetColoursCanHaveSpaces_"/>
			<referrer name="_SetColourHash_"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:X@" syntax="X@(n)">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
			<param name="n">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:XML_AddHandler" syntax="XML_AddHandler(rule, trigger[], function[])">
			<stacksize value="6"/>
			<referrer name="@yH_ScriptInit2"/>
			<dependency name="E_XML_HANDLER_FUNCTION"/>
			<dependency name="E_XML_HANDLER_TRIGGER"/>
			<dependency name="YSI_g_sCurHandler"/>
			<dependency name="YSI_g_sHandlers"/>
			<dependency name="YSI_g_sHandlers"/>
			<dependency name="strcat"/>
			<param name="rule">
				<paraminfo>XML </paraminfo>
			</param>
			<param name="trigger">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_AddItem" syntax="XML_AddItem(tag[], name[], parent)">
			<tagname value="XMLEntry"/>
			<stacksize value="6"/>
			<dependency name="E_XML_WRITE_CHILDREN"/>
			<dependency name="E_XML_WRITE_SIBLINGS"/>
			<dependency name="E_XML_WRITE_TAG"/>
			<dependency name="E_XML_WRITE_VALUE"/>
			<dependency name="XML_AddParameter"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWritePointer"/>
			<dependency name="cellmax"/>
			<dependency name="strcat"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="parent">
				<paraminfo>XMLEntry </paraminfo>
			</param>
		</member>
		<member name="M:XML_AddParameter" syntax="XML_AddParameter(parent, tag[], value[])">
			<tagname value="XMLEntry"/>
			<stacksize value="5"/>
			<referrer name="XML_AddItem"/>
			<dependency name="E_XML_WRITE_CHILDREN"/>
			<dependency name="E_XML_WRITE_SIBLINGS"/>
			<dependency name="E_XML_WRITE_TAG"/>
			<dependency name="E_XML_WRITE_VALUE"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWritePointer"/>
			<dependency name="cellmax"/>
			<dependency name="strcat"/>
			<param name="parent">
				<paraminfo>XMLEntry </paraminfo>
			</param>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_Destroy" syntax="XML_Destroy(rule)">
			<stacksize value="1"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sCurHandler"/>
			<param name="rule">
				<paraminfo>XML </paraminfo>
			</param>
		</member>
		<member name="M:XML_GetKeyValue" syntax="XML_GetKeyValue(key[], value[])">
			<stacksize value="5"/>
			<referrer name="TD_LoadColour"/>
			<referrer name="TD_Textdraw"/>
			<dependency name="E_XML_PARA_LEVEL"/>
			<dependency name="E_XML_PARA_NAME"/>
			<dependency name="E_XML_PARA_VALUE"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sEndTag"/>
			<dependency name="YSI_g_sParameters"/>
			<dependency name="strcat"/>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_GetName" syntax="XML_GetName(line[], &amp;pos)">
			<stacksize value="35"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_ReplaceItem"/>
			<dependency name="XML_GetName"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:XML_GetParameter" syntax="XML_GetParameter(line[], &amp;pos)">
			<stacksize value="83"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_ReplaceItem"/>
			<dependency name="XML_GetParameter"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:XML_GetParentValue" syntax="XML_GetParentValue(key[], value[])">
			<stacksize value="7"/>
			<dependency name="E_XML_PARA_LEVEL"/>
			<dependency name="E_XML_PARA_NAME"/>
			<dependency name="E_XML_PARA_VALUE"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sEndTag"/>
			<dependency name="YSI_g_sParameters"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_GetValue" syntax="XML_GetValue(line[], &amp;pos)">
			<stacksize value="83"/>
			<referrer name="XML_Parse"/>
			<dependency name="XML_GetValue"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:XML_New" syntax="XML_New()">
			<tagname value="XML"/>
			<stacksize value="2"/>
			<referrer name="@yH_ScriptInit2"/>
			<dependency name="YSI_g_sCurHandler"/>
		</member>
		<member name="M:XML_Parse" syntax="XML_Parse(rule, filename[])">
			<stacksize value="257"/>
			<referrer name="TD_Parse"/>
			<dependency name="XML_GetName"/>
			<dependency name="XML_GetParameter"/>
			<dependency name="XML_GetValue"/>
			<dependency name="XML_ParseTag"/>
			<dependency name="XML_Push"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sCurHandler"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="strfind"/>
			<param name="rule">
				<paraminfo>XML </paraminfo>
			</param>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_ParseTag" syntax="XML_ParseTag(rule, name[], tagCount)">
			<stacksize value="88"/>
			<referrer name="XML_Parse"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_XML_HANDLER_FUNCTION"/>
			<dependency name="E_XML_HANDLER_TRIGGER"/>
			<dependency name="E_XML_PARA_LEVEL"/>
			<dependency name="XML_ParseTag"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sCurHandler"/>
			<dependency name="YSI_g_sEndTag"/>
			<dependency name="YSI_g_sHandlers"/>
			<dependency name="YSI_g_sParameters"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="valstr"/>
			<param name="rule">
				<paraminfo>XML </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="tagCount">
			</param>
		</member>
		<member name="M:XML_Push" syntax="XML_Push(name[], text[], depth)">
			<stacksize value="5"/>
			<referrer name="XML_Parse"/>
			<dependency name="E_XML_PARA_LEVEL"/>
			<dependency name="E_XML_PARA_NAME"/>
			<dependency name="E_XML_PARA_VALUE"/>
			<dependency name="YSI_g_sCurBuffer"/>
			<dependency name="YSI_g_sParameters"/>
			<dependency name="YSI_g_sParameters"/>
			<dependency name="strcat"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="depth">
			</param>
		</member>
		<member name="M:XML_RemoveHandler" syntax="XML_RemoveHandler(rule, trigger[])">
			<stacksize value="8"/>
			<dependency name="E_XML_HANDLER_FUNCTION"/>
			<dependency name="E_XML_HANDLER_TRIGGER"/>
			<dependency name="YSI_g_sCurHandler"/>
			<dependency name="YSI_g_sHandlers"/>
			<dependency name="YSI_g_sHandlers"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="rule">
				<paraminfo>XML </paraminfo>
			</param>
			<param name="trigger">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_RemoveItem" syntax="XML_RemoveItem(file[], tag[], name[])">
			<stacksize value="7"/>
			<dependency name="XML_ReplaceItem"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:XML_ReplaceItem" syntax="XML_ReplaceItem(file[], tag[], name[], replacement)">
			<stacksize value="223"/>
			<referrer name="XML_RemoveItem"/>
			<dependency name="XML_GetName"/>
			<dependency name="XML_GetParameter"/>
			<dependency name="XML_WriteItemData"/>
			<dependency name="YSI_g_sXMLWritePointer"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fseek"/>
			<dependency name="ftemp"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="strcmp"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="replacement">
			</param>
		</member>
		<member name="M:XML_WriteItem" syntax="XML_WriteItem(filename[], item, bIncludeXML, bFavourShort)">
			<stacksize value="141"/>
			<dependency name="XML_WriteItemData"/>
			<dependency name="XML_WriteItemDataShort"/>
			<dependency name="YSI_g_sXMLWritePointer"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fseek"/>
			<dependency name="ftemp"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="item">
				<paraminfo>XMLEntry </paraminfo>
			</param>
			<param name="bIncludeXML">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="bFavourShort">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:XML_WriteItemData" syntax="XML_WriteItemData(item, fHnd, depth)">
			<stacksize value="141"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_WriteItemData"/>
			<referrer name="XML_ReplaceItem"/>
			<dependency name="E_XML_WRITE_CHILDREN"/>
			<dependency name="E_XML_WRITE_SIBLINGS"/>
			<dependency name="E_XML_WRITE_TAG"/>
			<dependency name="E_XML_WRITE_VALUE"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<param name="item">
			</param>
			<param name="fHnd">
				<paraminfo>File </paraminfo>
			</param>
			<param name="depth">
			</param>
		</member>
		<member name="M:XML_WriteItemDataShort" syntax="XML_WriteItemDataShort(item, fHnd, depth)">
			<stacksize value="141"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_WriteItemDataShort"/>
			<dependency name="E_XML_WRITE_CHILDREN"/>
			<dependency name="E_XML_WRITE_SIBLINGS"/>
			<dependency name="E_XML_WRITE_TAG"/>
			<dependency name="E_XML_WRITE_VALUE"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="YSI_g_sXMLWriteBuffer"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<param name="item">
			</param>
			<param name="fHnd">
				<paraminfo>File </paraminfo>
			</param>
			<param name="depth">
			</param>
		</member>
		<member name="M:Y@" syntax="Y@()">
			<stacksize value="8"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:YHash" syntax="YHash(str[], sensitive, type, len, pack)">
			<stacksize value="3"/>
			<referrer name="SetColour"/>
			<referrer name="GetColour"/>
			<referrer name="GetColourStream"/>
			<referrer name="TD_LoadColour"/>
			<dependency name="hash_bernstein"/>
			<dependency name="hash_fnv1"/>
			<dependency name="hash_fnv1a"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sensitive">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="type">
				<paraminfo>e_HASH_TYPE </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="pack">
			</param>
		</member>
		<member name="M:YVers_Callback" syntax="YVers_Callback(index, code, data[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="false"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="index">
			</param>
			<param name="code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YVers_OnScriptInit" syntax="YVers_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Debug_SetState"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:Z@" syntax="Z@(v)">
			<stacksize value="7"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:_@_y_amx_inc_@_" syntax="_@_y_amx_inc_@_()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AMX_TraceFunc"/>
		</member>
		<member name="M:_@_y_funcinc_@_" syntax="_@_y_funcinc_@_()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="memcpy"/>
			<dependency name="printf"/>
			<dependency name="strcat"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:_ScriptInit_FixState" syntax="_ScriptInit_FixState()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_script_init_fix_state"/>
		</member>
		<member name="M:_SetColourHash" syntax="_SetColourHash(hash, color)">
			<stacksize value="5"/>
			<referrer name="_SetColourHash_"/>
			<referrer name="_SetColourHash@"/>
			<dependency name="GetColourHash"/>
			<dependency name="YSI_g_sColours"/>
			<dependency name="YSI_g_sColours"/>
			<dependency name="true"/>
			<param name="hash">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:_SetColourHash@" syntax="_SetColourHash@(hash, color, __m)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_@"/>
			<dependency name="_SetColourHash"/>
			<param name="hash">
			</param>
			<param name="color">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_SetColourHash_" syntax="_SetColourHash_(hash, color)">
			<stacksize value="7"/>
			<referrer name="SetColourHash"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_SetColourHash"/>
			<param name="hash">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:_SetColoursCanHaveSpaces" syntax="_SetColoursCanHaveSpaces(set)">
			<stacksize value="1"/>
			<referrer name="_SetColoursCanHaveSpaces_"/>
			<referrer name="_SetColoursCanHaveSpaces@"/>
			<dependency name="YSI_g_sCheckSpaces"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:_SetColoursCanHaveSpaces@" syntax="_SetColoursCanHaveSpaces@(set, __m)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="_@"/>
			<dependency name="_SetColoursCanHaveSpaces"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_SetColoursCanHaveSpaces_" syntax="_SetColoursCanHaveSpaces_(set)">
			<stacksize value="6"/>
			<referrer name="SetColoursCanHaveSpaces"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_SetColoursCanHaveSpaces"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_A" syntax="_Timer_A(str[], len)">
			<stacksize value="8"/>
			<dependency name="Malloc_SetA"/>
			<dependency name="Timer_GetSingleSlot"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:_Timer_C" syntax="_Timer_C(tt, g)">
			<stacksize value="5"/>
			<dependency name="I@"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<param name="tt">
			</param>
			<param name="g">
			</param>
		</member>
		<member name="M:_Timer_D" syntax="_Timer_D(func[], interval, action, who, results[], &amp;pp, a[])">
			<stacksize value="7"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<dependency name="true"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="who">
			</param>
			<param name="results">
				<paraminfo> [1000] </paraminfo>
			</param>
			<param name="pp">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="a">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_F" syntax="_Timer_F(slot)">
			<stacksize value="5"/>
			<referrer name="_Timer_H"/>
			<dependency name="KillTimer"/>
			<dependency name="Malloc_Free"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="slot">
			</param>
		</member>
		<member name="M:_Timer_H" syntax="_Timer_H(slot)">
			<stacksize value="4"/>
			<dependency name="_Timer_F"/>
			<param name="slot">
			</param>
		</member>
		<member name="M:_Timer_I" syntax="_Timer_I(func[], interval, action, &amp;result)">
			<stacksize value="5"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimer"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="result">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_S" syntax="_Timer_S(str[])">
			<stacksize value="8"/>
			<dependency name="Malloc_SetS"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:bernstein" syntax="bernstein(string[])">
			<stacksize value="4"/>
			<referrer name="TD_Create"/>
			<referrer name="TD_Textdraw"/>
			<referrer name="TD_GetNamed"/>
			<referrer name="TD_Clone"/>
			<referrer name="TD_Name"/>
			<referrer name="TD_DisplayNamed"/>
			<referrer name="TD_DisplayNamedForPlayer"/>
			<referrer name="TD_DisplayNamedForAll"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:binstr" syntax="binstr(string[])">
			<stacksize value="3"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:boolstr" syntax="boolstr(string[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:calloc" syntax="calloc(size)">
			<tagname value="Alloc"/>
			<stacksize value="5"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="size">
			</param>
		</member>
		<member name="M:chrfind" syntax="chrfind(needle, haystack[], start)">
			<stacksize value="3"/>
			<dependency name="strlen"/>
			<param name="needle">
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:chrfindp" syntax="chrfindp(needle, haystack[], start)">
			<stacksize value="1"/>
			<param name="needle">
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:cmd_adminlevel" syntax="cmd_adminlevel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setvip" syntax="cmd_setvip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:endofline" syntax="endofline(line[], pos)">
			<stacksize value="3"/>
			<dependency name="strlen"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="DisplayEventLeader"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatstr" syntax="floatstr(string[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="TD_Textdraw"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_PrintArray"/>
			<referrer name="va_format"/>
			<referrer name="va_return"/>
			<referrer name="Bit_Display"/>
			<referrer name="XML_WriteItemData"/>
			<referrer name="XML_WriteItemDataShort"/>
			<referrer name="ABanPlayer"/>
			<referrer name="DisplayEventLeader"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:fread" syntax="fread(handle, string[], size, pack)">
			<attribute name="native"/>
			<referrer name="XML_Parse"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:fremove" syntax="fremove(name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fseek" syntax="fseek(handle, position, whence)">
			<attribute name="native"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="position">
			</param>
			<param name="whence">
				<paraminfo>seek_whence </paraminfo>
			</param>
		</member>
		<member name="M:ftemp" syntax="ftemp()">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_ReplaceItem"/>
		</member>
		<member name="M:ftouch" syntax="ftouch(filename[])">
			<stacksize value="5"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="Hooks_FindAll"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fwrite" syntax="fwrite(handle, string[])">
			<attribute name="native"/>
			<referrer name="XML_WriteItem"/>
			<referrer name="XML_WriteItemData"/>
			<referrer name="XML_WriteItemDataShort"/>
			<referrer name="XML_ReplaceItem"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getproperty" syntax="getproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="Y@"/>
			<referrer name="Z@"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getstring" syntax="getstring(addr)">
			<stacksize value="135"/>
			<dependency name="getstring"/>
			<dependency name="va_getstring"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:getstringarg" syntax="getstringarg(addr)">
			<stacksize value="135"/>
			<dependency name="getstringarg"/>
			<dependency name="va_getstring"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:hexstr" syntax="hexstr(string[])">
			<stacksize value="4"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:isVIP" syntax="isVIP(playerid)">
			<stacksize value="4"/>
			<dependency name="GetPVarInt"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ishex" syntax="ishex(str[])">
			<stacksize value="3"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:isnumeric" syntax="isnumeric(str[])">
			<stacksize value="3"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:memset" syntax="memset(arr[], size, val)">
			<stacksize value="7"/>
			<dependency name="rawMemset"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="val">
			</param>
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="GetColourStream"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:numargs" syntax="numargs()">
			<attribute name="native"/>
			<referrer name="Debug_Print0"/>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnScriptInit"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_Print0"/>
			<referrer name="va_print"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_Print0"/>
			<referrer name="va_printf"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="TD_MorphTDInternal"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="Itter_RandomInternal"/>
			<param name="max">
			</param>
		</member>
		<member name="M:rawMemset" syntax="rawMemset(iAddress, iSize, iValue)">
			<stacksize value="1"/>
			<referrer name="memset"/>
			<param name="iAddress">
			</param>
			<param name="iSize">
			</param>
			<param name="iValue">
			</param>
		</member>
		<member name="M:setproperty" syntax="setproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="X@"/>
			<referrer name="Y@"/>
			<referrer name="Z@"/>
			<referrer name="T@"/>
			<referrer name="S@"/>
			<referrer name="R@"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf" syntax="sscanf(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="cmd_adminlevel"/>
			<referrer name="cmd_setvip"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_getstring"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="XML_Push"/>
			<referrer name="XML_GetKeyValue"/>
			<referrer name="XML_GetParentValue"/>
			<referrer name="XML_AddHandler"/>
			<referrer name="XML_RemoveHandler"/>
			<referrer name="XML_AddParameter"/>
			<referrer name="XML_AddItem"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="YVers_Callback"/>
			<referrer name="boolstr"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="XML_ParseTag"/>
			<referrer name="XML_GetParentValue"/>
			<referrer name="XML_RemoveHandler"/>
			<referrer name="XML_ReplaceItem"/>
			<referrer name="SetColour"/>
			<referrer name="GetColour"/>
			<referrer name="GetColourStream"/>
			<referrer name="Colours_DoHashParse"/>
			<referrer name="TD_LoadColour"/>
			<referrer name="TD_Textdraw"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<referrer name="XML_Parse"/>
			<referrer name="SetColour"/>
			<referrer name="GetColour"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="StripNL"/>
			<referrer name="endofline"/>
			<referrer name="chrfind"/>
			<referrer name="unpack"/>
			<referrer name="va_strlen"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="_Timer_S"/>
			<referrer name="YHash"/>
			<referrer name="GetColourStream"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strpack" syntax="strpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="TD_Create"/>
			<referrer name="TD_Textdraw"/>
			<referrer name="TD_Clone"/>
			<referrer name="TD_Name"/>
			<referrer name="TD_Display"/>
			<referrer name="TD_SetString"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strunpack" syntax="strunpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="unpack"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<referrer name="Malloc_NewS"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="GetIP"/>
			<referrer name="TD_Textdraw"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="c">
			</param>
		</member>
		<member name="M:unformat" syntax="unformat(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="TD_LoadColour"/>
			<referrer name="TD_Textdraw"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:unpack" syntax="unpack(str[])">
			<stacksize value="135"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<dependency name="unpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:va_CallLocalFunction" syntax="va_CallLocalFunction(function[], fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_CallRemoteFunction" syntax="va_CallRemoteFunction(function[], fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="CallRemoteFunction"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_CreatePlayerTextDraw" syntax="va_CreatePlayerTextDraw(playerid, x, y, fmat[], ...)">
			<tagname value="PlayerText"/>
			<stacksize value="1049"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForAll" syntax="va_GameTextForAll(fmat[], time, style, ...)">
			<stacksize value="1046"/>
			<dependency name="GameTextForAll"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForPlayer" syntax="va_GameTextForPlayer(playerid, fmat[], time, style, ...)">
			<stacksize value="1047"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessage" syntax="va_SendClientMessage(playerid, colour, fmat[], ...)">
			<stacksize value="1048"/>
			<dependency name="SendClientMessage"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessageToAll" syntax="va_SendClientMessageToAll(colour, fmat[], ...)">
			<stacksize value="1047"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="va_return"/>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToAll" syntax="va_SendPlayerMessageToAll(senderid, fmat[], ...)">
			<stacksize value="1047"/>
			<dependency name="SendPlayerMessageToAll"/>
			<dependency name="va_return"/>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToPlayer" syntax="va_SendPlayerMessageToPlayer(playerid, senderid, fmat[], ...)">
			<stacksize value="1048"/>
			<dependency name="SendPlayerMessageToPlayer"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetTimerEx" syntax="va_SetTimerEx(function[], interval, repeating, fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="SetTimerEx"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_TextDrawCreate" syntax="va_TextDrawCreate(x, y, fmat[], ...)">
			<tagname value="Text"/>
			<stacksize value="1048"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="va_return"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_format" syntax="va_format(out[], size, fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="format"/>
			<param name="out">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_getstring" syntax="va_getstring(dest[], arg, len)">
			<stacksize value="1"/>
			<referrer name="getstring"/>
			<referrer name="getstringarg"/>
			<dependency name="strcat"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arg">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:va_print" syntax="va_print(fmat[], ...)">
			<stacksize value="1046"/>
			<dependency name="print"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_printf" syntax="va_printf(fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="printf"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_return" syntax="va_return(fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_print"/>
			<dependency name="format"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_strlen" syntax="va_strlen(arg)">
			<stacksize value="1"/>
			<dependency name="strlen"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:valstr" syntax="valstr(dest[], value, pack)">
			<attribute name="native"/>
			<referrer name="XML_ParseTag"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:zcmd_OnGameModeInit" syntax="zcmd_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:zcmd_OnPlayerCommandText" syntax="zcmd_OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerCommandText"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>

	</members>
</doc>
