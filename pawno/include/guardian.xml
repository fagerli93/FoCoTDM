<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Documents and Settings/Marcel/Desktop/Server/pawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Documents and Settings\Marcel\Desktop\Server\pawno\include\guardian.inc">
	<assembly>
		<name>guardian.inc</name>
	</assembly>
	<members>

		<!-- enumerations -->
		<member name="T:Guardian_Player" value="189">
			<tagname value="Guardian_Player"/>
			<member name="C:ac_timer" value="0">
			</member>
			<member name="C:ac_msginterval" value="1">
				<size value="20"/>
			</member>
			<member name="C:ac_money" value="21">
			</member>
			<member name="C:ac_jetpack" value="22">
			</member>
			<member name="C:ac_teleport" value="23">
			</member>
			<member name="C:ac_health" value="24">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_armour" value="25">
				<tagname value="Float"/>
			</member>
			<member name="C:lastposx" value="26">
				<tagname value="Float"/>
			</member>
			<member name="C:lastposy" value="27">
				<tagname value="Float"/>
			</member>
			<member name="C:lastposz" value="28">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_int" value="29">
			</member>
			<member name="C:ac_vw" value="30">
			</member>
			<member name="C:ac_weap" value="31">
				<size value="13"/>
			</member>
			<member name="C:ac_weapa" value="44">
				<size value="13"/>
			</member>
			<member name="C:ac_lastveh" value="57">
			</member>
			<member name="C:ac_dead" value="58">
			</member>
			<member name="C:ac_spawned" value="59">
			</member>
			<member name="C:tab_timer" value="60">
			</member>
			<member name="C:last_message" value="61">
				<size value="128"/>
			</member>
		</member>
		<member name="T:Guardian_Vehicle" value="42">
			<tagname value="Guardian_Vehicle"/>
			<member name="C:ac_modelid" value="0">
			</member>
			<member name="C:ac_driver" value="1">
			</member>
			<member name="C:ac_msginterval" value="2">
				<size value="20"/>
			</member>
			<member name="C:ac_health" value="22">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_unnocx" value="23">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_unnocy" value="24">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_unnocz" value="25">
				<tagname value="Float"/>
			</member>
			<member name="C:ac_col1" value="26">
			</member>
			<member name="C:ac_col2" value="27">
			</member>
			<member name="C:ac_sprayjob" value="28">
			</member>
			<member name="C:ac_comp" value="29">
				<size value="13"/>
			</member>
		</member>
		<member name="T:Guardian_WeapInfo" value="31">
			<tagname value="Guardian_WeapInfo"/>
			<member name="C:WeapName" value="0">
				<size value="30"/>
			</member>
			<member name="C:WeapSlot" value="30">
			</member>
		</member>

		<!-- constants -->
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="strCopy"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="containsip"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="containsip"/>
		</member>

		<!-- variables -->
		<member name="F:AntiCheatPVehTimer">
			<referrer name="ResetACData"/>
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:AntiCheatTimer">
			<referrer name="AC_Delay"/>
			<referrer name="Guardian_ResetPlayerWeapons"/>
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:Bot@YSII_Ag">
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:Bot@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:Character@YSII_Ag">
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:Character@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:Guardian_PlayerCheckInterval">
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="Itter_OnPlayerConnect"/>
		</member>
		<member name="F:Guardian_PlayerData">
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="ResetACData"/>
			<referrer name="Guardian_GivePlayerMoney"/>
			<referrer name="Guardian_SetPlayerInterior"/>
			<referrer name="Guardian_SetPlayerVirtualWorld"/>
			<referrer name="Guardian_SetPlayerSkin"/>
			<referrer name="Guardian_SetPlayerMoney"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<referrer name="Guardian_SetPlayerPos"/>
			<referrer name="Guardian_SetVehiclePos"/>
			<referrer name="Guardian_SetPlayerArmour"/>
			<referrer name="Guardian_GetPlayerMoney"/>
			<referrer name="Guardian_ResetPlayerWeapons"/>
			<referrer name="Guardian_GivePlayerWeapon"/>
			<referrer name="Guardian_SetSpawnInfo"/>
			<referrer name="Guardian_SetPlayerSpecialAction"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="F:Guardian_ReNotificationTime">
			<referrer name="SetWarningReNotificationTime"/>
			<referrer name="AC_Delay"/>
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:Guardian_TabLimit">
			<referrer name="SetTabbedLimit"/>
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:Guardian_VehicleData">
			<referrer name="Guardian_AddStaticVehicle"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<referrer name="Guardian_CreateVehicle"/>
			<referrer name="Guardian_DestroyVehicle"/>
			<referrer name="Guardian_ChangeVehicleColor"/>
			<referrer name="Guardian_AddVehicleComponent"/>
			<referrer name="Guardian_RemoveVehicleComponent"/>
			<referrer name="Guardian_SetVehicleHealth"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnVehiclePaintjob"/>
		</member>
		<member name="F:Guardian_WeapNames">
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="Guardian_GivePlayerWeapon"/>
			<referrer name="Guardian_SetSpawnInfo"/>
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:Player@YSII_Ag">
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="Guardian_SetVehiclePos"/>
		</member>
		<member name="F:Player@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:SprunkLocations">
			<tagname value="Float"/>
			<referrer name="IsNearSprunk"/>
		</member>
		<member name="F:UsePedAnims">
			<referrer name="Guardian_UsePlayerPedAnims"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="F:Vehicle@YSII_Ag">
			<referrer name="Guardian_AddStaticVehicle"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<referrer name="Guardian_CreateVehicle"/>
			<referrer name="Guardian_DestroyVehicle"/>
		</member>
		<member name="F:Vehicle@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="Guardian_AddStaticVehicle"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<referrer name="Guardian_CreateVehicle"/>
			<referrer name="Guardian_DestroyVehicle"/>
		</member>
		<member name="F:YSI_g_sCallbacks">
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:aclastreload">
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:acshotsfired">
			<referrer name="GuardianPlayerCheck"/>
		</member>
		<member name="F:enterkey">
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerKeyStateChange"/>
		</member>
		<member name="F:ignoreac">
			<referrer name="Guardian_GivePlayerMoney"/>
			<referrer name="Guardian_SetPlayerMoney"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<referrer name="Guardian_SetPlayerPos"/>
			<referrer name="Guardian_SetVehiclePos"/>
			<referrer name="Guardian_SetPlayerArmour"/>
			<referrer name="Guardian_ResetPlayerWeapons"/>
			<referrer name="Guardian_GivePlayerWeapon"/>
			<referrer name="Guardian_SetSpawnInfo"/>
			<referrer name="Guardian_SetPlayerSpecialAction"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerStateChange"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="GuardianPlayerCheck"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="IsNearSprunk"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GuardianPlayerCheck"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<referrer name="GuardianPlayerCheck"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GuardianPlayerCheck"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AC_Delay" syntax="AC_Delay(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="Guardian_GivePlayerMoney"/>
			<referrer name="Guardian_SetPlayerMoney"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<referrer name="Guardian_SetPlayerPos"/>
			<referrer name="Guardian_SetVehiclePos"/>
			<referrer name="Guardian_SetPlayerArmour"/>
			<referrer name="Guardian_GivePlayerWeapon"/>
			<referrer name="Guardian_SetPlayerSpecialAction"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="AntiCheatTimer"/>
			<dependency name="Guardian_ReNotificationTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AddStaticVehicle" syntax="AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2)">
			<attribute name="native"/>
			<referrer name="Guardian_AddStaticVehicle"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:AddStaticVehicleEx" syntax="AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay)">
			<attribute name="native"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
		</member>
		<member name="M:AddVehicleComponent" syntax="AddVehicleComponent(vehicleid, componentid)">
			<attribute name="native"/>
			<referrer name="Guardian_AddVehicleComponent"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="SendGuardianPlayerWarning"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="Itter_OnGameModeInit"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnVehiclePaintjob"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:ChangeVehicleColor" syntax="ChangeVehicleColor(vehicleid, color1, color2)">
			<attribute name="native"/>
			<referrer name="Guardian_ChangeVehicleColor"/>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:CreateVehicle" syntax="CreateVehicle(vehicletype, x, y, z, rotation, color1, color2, respawn_delay)">
			<attribute name="native"/>
			<referrer name="Guardian_CreateVehicle"/>
			<param name="vehicletype">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="Guardian_DestroyVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetAnimationName" syntax="GetAnimationName(index, animlib[], len1, animname[], len2)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="index">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len1">
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len2">
			</param>
		</member>
		<member name="M:GetGuardianReportForPlayer" syntax="GetGuardianReportForPlayer(playerid, strdest[][])">
			<attribute name="public"/>
			<stacksize value="237"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="WeapName"/>
			<dependency name="ac_armour"/>
			<dependency name="ac_health"/>
			<dependency name="ac_int"/>
			<dependency name="ac_money"/>
			<dependency name="ac_vw"/>
			<dependency name="ac_weap"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="strdel"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="tab_timer"/>
			<param name="playerid">
			</param>
			<param name="strdest">
				<paraminfo> [][] </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerAnimationIndex" syntax="GetPlayerAnimationIndex(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerArmour" syntax="GetPlayerArmour(playerid, &amp;armour)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerHealth" syntax="GetPlayerHealth(playerid, &amp;health)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerInterior" syntax="GetPlayerInterior(playerid)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMoney" syntax="GetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerSpecialAction" syntax="GetPlayerSpecialAction(playerid)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerState" syntax="GetPlayerState(playerid)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerDeath"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerSurfingVehicleID" syntax="GetPlayerSurfingVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="Guardian_SetVehiclePos"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVirtualWorld" syntax="GetPlayerVirtualWorld(playerid)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerWeaponData" syntax="GetPlayerWeaponData(playerid, slot, &amp;weapons, &amp;ammo)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
			<param name="weapons">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerWeaponState" syntax="GetPlayerWeaponState(playerid)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetVehicleComponentInSlot" syntax="GetVehicleComponentInSlot(vehicleid, slot)">
			<attribute name="native"/>
			<referrer name="Guardian_AddStaticVehicle"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<referrer name="Guardian_CreateVehicle"/>
			<param name="vehicleid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:GetVehicleComponentType" syntax="GetVehicleComponentType(component)">
			<attribute name="native"/>
			<referrer name="Guardian_AddVehicleComponent"/>
			<referrer name="Guardian_RemoveVehicleComponent"/>
			<param name="component">
			</param>
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="IsAPlane"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GivePlayerMoney" syntax="GivePlayerMoney(playerid, money)">
			<attribute name="native"/>
			<referrer name="Guardian_GivePlayerMoney"/>
			<referrer name="Guardian_SetPlayerMoney"/>
			<param name="playerid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:GivePlayerWeapon" syntax="GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="Guardian_GivePlayerWeapon"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:GuardianDebug" syntax="GuardianDebug(string[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="Itter_OnGameModeInit"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehiclePaintjob"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GuardianPlayerCheck" syntax="GuardianPlayerCheck(playerid)">
			<attribute name="public"/>
			<stacksize value="335"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="AntiCheatPVehTimer"/>
			<dependency name="AntiCheatTimer"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSpecialAction"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetPlayerWeaponState"/>
			<dependency name="Guardian_PlayerCheckInterval"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_ReNotificationTime"/>
			<dependency name="Guardian_TabLimit"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="IsNearSprunk"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="WeapName"/>
			<dependency name="ac_armour"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_health"/>
			<dependency name="ac_int"/>
			<dependency name="ac_jetpack"/>
			<dependency name="ac_money"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_spawned"/>
			<dependency name="ac_teleport"/>
			<dependency name="ac_vw"/>
			<dependency name="ac_weap"/>
			<dependency name="aclastreload"/>
			<dependency name="acshotsfired"/>
			<dependency name="enterkey"/>
			<dependency name="format"/>
			<dependency name="ignoreac"/>
			<dependency name="lastposx"/>
			<dependency name="lastposy"/>
			<dependency name="lastposz"/>
			<dependency name="tab_timer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GuardianVehicleCheck" syntax="GuardianVehicleCheck(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Guardian_AddStaticVehicle" syntax="Guardian_AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="AddStaticVehicle"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Vehicle@YSII_Ag"/>
			<dependency name="Vehicle@YSII_Cg"/>
			<dependency name="ac_col1"/>
			<dependency name="ac_col2"/>
			<dependency name="ac_comp"/>
			<dependency name="ac_health"/>
			<dependency name="ac_modelid"/>
			<dependency name="ac_sprayjob"/>
			<dependency name="ac_unnocx"/>
			<dependency name="ac_unnocy"/>
			<dependency name="ac_unnocz"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:Guardian_AddStaticVehicleEx" syntax="Guardian_AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2, respawn_delay)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AddStaticVehicleEx"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Vehicle@YSII_Ag"/>
			<dependency name="Vehicle@YSII_Cg"/>
			<dependency name="ac_col1"/>
			<dependency name="ac_col2"/>
			<dependency name="ac_comp"/>
			<dependency name="ac_health"/>
			<dependency name="ac_modelid"/>
			<dependency name="ac_sprayjob"/>
			<dependency name="ac_unnocx"/>
			<dependency name="ac_unnocy"/>
			<dependency name="ac_unnocz"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
		</member>
		<member name="M:Guardian_AddVehicleComponent" syntax="Guardian_AddVehicleComponent(vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetVehicleComponentType"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="ac_comp"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:Guardian_ChangeVehicleColor" syntax="Guardian_ChangeVehicleColor(vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ChangeVehicleColor"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="ac_col1"/>
			<dependency name="ac_col2"/>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:Guardian_CreateVehicle" syntax="Guardian_CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Vehicle@YSII_Ag"/>
			<dependency name="Vehicle@YSII_Cg"/>
			<dependency name="ac_col1"/>
			<dependency name="ac_col2"/>
			<dependency name="ac_comp"/>
			<dependency name="ac_health"/>
			<dependency name="ac_modelid"/>
			<dependency name="ac_sprayjob"/>
			<dependency name="ac_unnocx"/>
			<dependency name="ac_unnocy"/>
			<dependency name="ac_unnocz"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
		</member>
		<member name="M:Guardian_DestroyVehicle" syntax="Guardian_DestroyVehicle(vehicleid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="Vehicle@YSII_Ag"/>
			<dependency name="Vehicle@YSII_Cg"/>
			<dependency name="ac_col1"/>
			<dependency name="ac_col2"/>
			<dependency name="ac_comp"/>
			<dependency name="ac_health"/>
			<dependency name="ac_modelid"/>
			<dependency name="ac_sprayjob"/>
			<dependency name="ac_unnocx"/>
			<dependency name="ac_unnocy"/>
			<dependency name="ac_unnocz"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Guardian_GetPlayerMoney" syntax="Guardian_GetPlayerMoney(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ac_money"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Guardian_GivePlayerMoney" syntax="Guardian_GivePlayerMoney(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="AC_Delay"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ResetPlayerMoney"/>
			<dependency name="ac_money"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:Guardian_GivePlayerWeapon" syntax="Guardian_GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AC_Delay"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="WeapSlot"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_weap"/>
			<dependency name="ac_weapa"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:Guardian_OnGameModeInit" syntax="Guardian_OnGameModeInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:Guardian_OnPlayerConnect" syntax="Guardian_OnPlayerConnect(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerDeath" syntax="Guardian_OnPlayerDeath(playerid, killerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerDisconnect" syntax="Guardian_OnPlayerDisconnect(playerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerKeyStateChange" syntax="Guardian_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerSpawn" syntax="Guardian_OnPlayerSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerStateChange" syntax="Guardian_OnPlayerStateChange(playerid, newstate, oldstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:Guardian_OnPlayerUpdate" syntax="Guardian_OnPlayerUpdate(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Guardian_OnVehiclePaintjob" syntax="Guardian_OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:Guardian_RemoveVehicleComponent" syntax="Guardian_RemoveVehicleComponent(vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GetVehicleComponentType"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="RemoveVehicleComponent"/>
			<dependency name="ac_comp"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:Guardian_ResetPlayerWeapons" syntax="Guardian_ResetPlayerWeapons(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="AntiCheatTimer"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="ac_weap"/>
			<dependency name="ac_weapa"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Guardian_SetPlayerArmour" syntax="Guardian_SetPlayerArmour(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="AC_Delay"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="ac_armour"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Guardian_SetPlayerHealth" syntax="Guardian_SetPlayerHealth(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="operator!=(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="AC_Delay"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_health"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Guardian_SetPlayerInterior" syntax="Guardian_SetPlayerInterior(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_int"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:Guardian_SetPlayerMoney" syntax="Guardian_SetPlayerMoney(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="AC_Delay"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ResetPlayerMoney"/>
			<dependency name="ac_money"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:Guardian_SetPlayerPos" syntax="Guardian_SetPlayerPos(playerid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AC_Delay"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_teleport"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Guardian_SetPlayerSkin" syntax="Guardian_SetPlayerSkin(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="ac_dead"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:Guardian_SetPlayerSpecialAction" syntax="Guardian_SetPlayerSpecialAction(playerid, specialaction)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="AC_Delay"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_jetpack"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="specialaction">
			</param>
		</member>
		<member name="M:Guardian_SetPlayerVirtualWorld" syntax="Guardian_SetPlayerVirtualWorld(playerid, amount)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_vw"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:Guardian_SetSpawnInfo" syntax="Guardian_SetSpawnInfo(playerid, pteam, pskin, px, py, pz, pAngle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_WeapNames"/>
			<dependency name="SetSpawnInfo"/>
			<dependency name="WeapSlot"/>
			<dependency name="ac_weap"/>
			<dependency name="ac_weapa"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="pteam">
			</param>
			<param name="pskin">
			</param>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pAngle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:Guardian_SetVehicleHealth" syntax="Guardian_SetVehicleHealth(vehicleid, health)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="ac_health"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Guardian_SetVehiclePos" syntax="Guardian_SetVehiclePos(vehicleid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AC_Delay"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_teleport"/>
			<dependency name="ignoreac"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Guardian_UsePlayerPedAnims" syntax="Guardian_UsePlayerPedAnims()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="UsePedAnims"/>
			<dependency name="UsePlayerPedAnims"/>
		</member>
		<member name="M:IsAPlane" syntax="IsAPlane(carid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="GetVehicleModel"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:IsNearSprunk" syntax="IsNearSprunk(playerid)">
			<stacksize value="8"/>
			<referrer name="GuardianPlayerCheck"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SprunkLocations"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInAnyVehicle" syntax="IsPlayerInAnyVehicle(playerid)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<attribute name="native"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="IsNearSprunk"/>
			<param name="playerid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_AddInternal" syntax="Itter_AddInternal(&amp;count, array[], value, size)">
			<stacksize value="3"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="Guardian_AddStaticVehicle"/>
			<referrer name="Guardian_AddStaticVehicleEx"/>
			<referrer name="Guardian_CreateVehicle"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ClearInternal" syntax="Itter_ClearInternal(&amp;count, array[], size)">
			<stacksize value="3"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ContainsInternal" syntax="Itter_ContainsInternal(array[], value, size)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_FreeInternal" syntax="Itter_FreeInternal(array[], size)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_InitInternal" syntax="Itter_InitInternal(arr[][], s0, s1)">
			<stacksize value="4"/>
			<param name="arr">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="s0">
			</param>
			<param name="s1">
			</param>
		</member>
		<member name="M:Itter_OnGameModeInit" syntax="Itter_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GuardianDebug"/>
		</member>
		<member name="M:Itter_OnPlayerConnect" syntax="Itter_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_PlayerCheckInterval"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ResetACData"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ac_money"/>
			<dependency name="ac_timer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_OnPlayerDisconnect" syntax="Itter_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="KillTimer"/>
			<dependency name="ResetACData"/>
			<dependency name="ac_timer"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Itter_PrevInternal" syntax="Itter_PrevInternal(array[], size, slot)">
			<stacksize value="3"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:Itter_RandomInternal" syntax="Itter_RandomInternal(count, array[], size)">
			<stacksize value="4"/>
			<dependency name="random"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_RemoveInternal" syntax="Itter_RemoveInternal(&amp;count, array[], value, size)">
			<stacksize value="9"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="Guardian_DestroyVehicle"/>
			<dependency name="Itter_SafeRemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_SafeRemoveInternal" syntax="Itter_SafeRemoveInternal(&amp;count, array[], value, &amp;last, size)">
			<stacksize value="2"/>
			<referrer name="Itter_RemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<attribute name="native"/>
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<param name="timerid">
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
			<dependency name="YSI_g_sCallbacks"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:OnGuardianPlayerWarning" syntax="OnGuardianPlayerWarning(playerid, warncode, reason[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="warncode">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnGuardianVehicleWarning" syntax="OnGuardianVehicleWarning(vehicleid, driver, warncode, reason[])">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="driver">
			</param>
			<param name="warncode">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="YSI_g_sCallbacks"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="375"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_spawned"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="YSI_g_sCallbacks"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="36"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="enterkey"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_health"/>
			<dependency name="ac_int"/>
			<dependency name="ac_spawned"/>
			<dependency name="ac_vw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AC_Delay"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="IsAPlane"/>
			<dependency name="ac_driver"/>
			<dependency name="ac_lastveh"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_teleport"/>
			<dependency name="ac_weap"/>
			<dependency name="ac_weapa"/>
			<dependency name="ignoreac"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="229"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GetAnimationName"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerName"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="UsePedAnims"/>
			<dependency name="ac_msginterval"/>
			<dependency name="format"/>
			<dependency name="strcmp"/>
			<dependency name="tab_timer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GuardianDebug"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="Guardian_VehicleData"/>
			<dependency name="ac_sprayjob"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:RemoveVehicleComponent" syntax="RemoveVehicleComponent(vehicleid, componentid)">
			<attribute name="native"/>
			<referrer name="Guardian_RemoveVehicleComponent"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:ResetACData" syntax="ResetACData(playerid)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<referrer name="Itter_OnPlayerDisconnect"/>
			<dependency name="AntiCheatPVehTimer"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="ac_armour"/>
			<dependency name="ac_dead"/>
			<dependency name="ac_health"/>
			<dependency name="ac_int"/>
			<dependency name="ac_jetpack"/>
			<dependency name="ac_lastveh"/>
			<dependency name="ac_msginterval"/>
			<dependency name="ac_spawned"/>
			<dependency name="ac_teleport"/>
			<dependency name="ac_vw"/>
			<dependency name="ac_weap"/>
			<dependency name="ac_weapa"/>
			<dependency name="lastposx"/>
			<dependency name="lastposy"/>
			<dependency name="lastposz"/>
			<dependency name="tab_timer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerMoney" syntax="ResetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="Guardian_GivePlayerMoney"/>
			<referrer name="Guardian_SetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerWeapons" syntax="ResetPlayerWeapons(playerid)">
			<attribute name="native"/>
			<referrer name="Guardian_ResetPlayerWeapons"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SendGuardianPlayerWarning" syntax="SendGuardianPlayerWarning(string[], playerid, warncode)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallRemoteFunction"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="warncode">
			</param>
		</member>
		<member name="M:SetPlayerArmour" syntax="SetPlayerArmour(playerid, armour)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerCheckInterval" syntax="SetPlayerCheckInterval(checktime)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Guardian_PlayerCheckInterval"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="Guardian_PlayerData"/>
			<dependency name="KillTimer"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ac_timer"/>
			<dependency name="print"/>
			<dependency name="true"/>
			<param name="checktime">
			</param>
		</member>
		<member name="M:SetPlayerHealth" syntax="SetPlayerHealth(playerid, health)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerInterior" syntax="SetPlayerInterior(playerid, interiorid)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerInterior"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerSkin" syntax="SetPlayerSkin(playerid, skinid)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerSkin"/>
			<param name="playerid">
			</param>
			<param name="skinid">
			</param>
		</member>
		<member name="M:SetPlayerSpecialAction" syntax="SetPlayerSpecialAction(playerid, actionid)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:SetPlayerVirtualWorld" syntax="SetPlayerVirtualWorld(playerid, worldid)">
			<attribute name="native"/>
			<referrer name="Guardian_SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="worldid">
			</param>
		</member>
		<member name="M:SetSpawnInfo" syntax="SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<attribute name="native"/>
			<referrer name="Guardian_SetSpawnInfo"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
			<param name="skin">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:SetTabbedLimit" syntax="SetTabbedLimit(limit)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Guardian_TabLimit"/>
			<param name="limit">
			</param>
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="Itter_OnPlayerConnect"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleHealth" syntax="SetVehicleHealth(vehicleid, health)">
			<attribute name="native"/>
			<referrer name="Guardian_SetVehicleHealth"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehiclePos" syntax="SetVehiclePos(vehicleid, x, y, z)">
			<attribute name="native"/>
			<referrer name="Guardian_SetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetWarningReNotificationTime" syntax="SetWarningReNotificationTime(time)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Guardian_ReNotificationTime"/>
			<dependency name="print"/>
			<param name="time">
			</param>
		</member>
		<member name="M:UsePlayerPedAnims" syntax="UsePlayerPedAnims()">
			<attribute name="native"/>
			<referrer name="Guardian_UsePlayerPedAnims"/>
		</member>
		<member name="M:containsip" syntax="containsip(text[])">
			<stacksize value="525"/>
			<dependency name="false"/>
			<dependency name="strCopy"/>
			<dependency name="strlen"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatround" syntax="floatround(value, method)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="method">
				<paraminfo>floatround_method </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="GuardianPlayerCheck"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="strCopy"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="strCopy"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="SetPlayerCheckInterval"/>
			<referrer name="SetWarningReNotificationTime"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="Itter_RandomInternal"/>
			<param name="max">
			</param>
		</member>
		<member name="M:strCopy" syntax="strCopy(sDest[], sSource[], lMaxLength)">
			<stacksize value="8"/>
			<referrer name="containsip"/>
			<dependency name="cellmax"/>
			<dependency name="memcpy"/>
			<dependency name="min"/>
			<dependency name="strlen"/>
			<param name="sDest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lMaxLength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strdel" syntax="strdel(string[], start, end)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:strins" syntax="strins(string[], substr[], pos, maxlength)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="substr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="GetGuardianReportForPlayer"/>
			<referrer name="containsip"/>
			<referrer name="strCopy"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="containsip"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>

	</members>
</doc>
